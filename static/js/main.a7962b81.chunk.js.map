{"version":3,"sources":["../node_modules/peerjs/dist sync","router/FadeInTransitionRouter/index.tsx","components/card/card.tsx","model/interfaces.ts","components/remirror-editor/extensions/link-extension/link-extention.ts","components/remirror-editor/extensions/image-extension/image-extension.ts","components/remirror-editor/remirror-editor.tsx","db/pouch/notes.ts","components/NotesContext.tsx","components/note-options-modal/note-options-modal.tsx","components/editor-container/editor-container.tsx","components/note-list/note-list.tsx","components/canvas/canvas.tsx","components/searchbar/searchbar.tsx","pages/canvas-workspace.tsx","components/add-note-fab/add-note-fab.tsx","components/remirror-editor/toolbar/index.tsx","pages/panel-workspace/panel-workspace.tsx","components/settings-fab/settings-fab.tsx","pages/library/library.tsx","db/pouch/peers.ts","replication/webrtc.ts","components/peer-connections/peer-connections.tsx","pages/demo.tsx","components/peer-details-modal/peer-details-modal.tsx","components/qr-code-scanner/qr-code-scanner.tsx","pages/settings/settings.tsx","components/back-button/back-button.tsx","components/shell/shell.tsx","router/Routes.jsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","FadeInTransitionRouter","props","location","TransitionGroup","className","CSSTransition","classNames","timeout","children","key","Card","useDrag","item","collect","monitor","isDragging","drag","preview","ref","style","display","hideSourceOnDrag","opacity","top","y","left","x","ItemTypes","LinkExtension","args","addHandler","_","data","window","open","href","markInputRule","regexp","RegExp","type","this","getAttributes","matches","text","RemirrorLinkExtension","ImageExtension","nodeInputRule","alt","src","RemirrorImageExtension","Editor","forwardRef","handleOnError","useCallback","json","invalidContent","transformers","remove","useRemirror","extensions","BoldExtension","ItalicExtension","BlockquoteExtension","defaultTarget","autoLink","HeadingExtension","BulletListExtension","OrderedListExtension","TaskListExtension","enableResizing","CodeExtension","UnderlineExtension","onError","content","state","doc","manager","setState","getContext","useImperativeHandle","initialContent","onChange","params","onFocus","event","onBlur","PouchDB","plugin","Upsert","QuickSearch","db","search","fields","build","then","console","log","catch","err","defaultState","updateNote","inputDocument","a","docId","upsert","response","insertNote","title","meta","createdTime","lastEditedTime","newDocument","_id","uuidv4","Date","now","putIfNotExists","storedDocument","get","res","_rev","rev","getNotes","allDocs","include_docs","result","rows","map","row","getNoteById","callback","changes","since","live","on","query","defaultContextValue","items","addItem","addArrayItem","removeItem","removeArrayItem","array","filter","find","NotesContext","React","createContext","displayName","modalStyle","borderRadius","height","maxWidth","marginLeft","marginRight","NoteOptionsModal","Modal","setAppElement","useContext","isOpen","onAfterClose","onAfterOpen","onRequestClose","onClick","note","deleteNote","EditorContainer","useState","setNote","setFocused","noteOptionsOpen","setNoteOptionsOpen","ctxRef","useRef","initialiseNote","useEffect","handleOnChange","updatedNote","toJSON","handleBlur","current","getState","textContent","handleFocus","placeholder","defaultValue","target","value","replace","wrap","NoteList","allNotes","setAllNotes","fetchAllNotes","idx","noteText","handleNoteButtonClick","CanvasContainer","DndProvider","backend","HTML5Backend","Canvas","setMousePos","noteListPos","setNoteListPos","cards","useSelector","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","moveCardPosition","createCard","onMouseMove","nativeEvent","offsetX","offsetY","onDoubleClick","Object","entries","index","card","SearchBar","setQuery","results","setResults","Search","total_rows","val","CanvasWorkspace","AddNoteFAB","newNote","handleClick","ActiveClass","isActive","Toolbar","commands","useCommands","active","useActive","undo","focus","redo","bold","toggleBold","italic","toggleItalic","underline","toggleUnderline","toggleCode","blockquote","toggleBlockquote","bulletList","toggleBulletList","taskList","toggleTaskList","PanelWorkspace","focusedEditorContext","setEditorContext","navigate","useNavigate","length","editorCtx","Provider","SettingsFab","Library","selectedNote","setSelectedNote","sort","b","el","toLocaleString","openNoteOptions","peer","dataConnection","inputPeer","getPeers","localStorage","getItem","Peer","setItem","connections","forEach","addPeer","Array","isArray","error","peerId","upsertPeer","Connect","connect","serialization","Replicate","dataToSend","send","PeerConnections","peers","setPeers","Demo","video","videoOutCanvasElement","setPeerId","setDataToSend","canvas","document","getElementById","QRCode","toCanvas","requestAnimationFrame","tick","readyState","HAVE_ENOUGH_DATA","canvasCtx","videoHeight","width","videoWidth","drawImage","imageData","getImageData","jsQR","inversionAttempts","hidden","PeerDetailsModal","canvasEl","setCanvasEl","canvasRef","node","storedPeerId","QRCodeScanner","videoEl","setVideoEl","setScannedData","stream","setStream","videoRef","navigator","mediaDevices","getUserMedia","facingMode","frameRate","ideal","max","mediaStream","srcObject","setAttribute","play","getTracks","track","stop","onScanned","Settings","showPeerDetails","setShowPeerDetails","showQRCodeScanner","setShowQRCodeScanner","BackButton","AppShell","Routes","from","to","noThrow","path","App","setNoteContext","noteContext","contextValue","useMemo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a7962b81.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 462;","import { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { Router, Location } from \"@reach/router\";\nimport \"./style.css\";\n\nconst FadeInTransitionRouter = (props) => {\n  return (\n    <Location>\n      {({ location }) => (\n        <TransitionGroup className=\"transition-group\">\n          <CSSTransition key={location.key} classNames=\"fade\" timeout={500}>\n            <Router location={location}>{props.children}</Router>\n          </CSSTransition>\n        </TransitionGroup>\n      )}\n    </Location>\n  );\n};\n\nexport default FadeInTransitionRouter;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ICanvasCard } from \"model/interfaces\";\nimport \"./card.css\";\n\ndeclare interface CardProps {\n  item: ICanvasCard;\n  onRemove?;\n  hideSourceOnDrag?: boolean;\n  children?: any;\n}\n\nconst Card = (props: CardProps) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: props.item,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      id={props.item.id}\n      ref={preview}\n      className=\"card\"\n      style={{\n        display: isDragging && props.hideSourceOnDrag ? \"none\" : \"flex\",\n        opacity: isDragging ? 0.5 : 1,\n        top: props.item.y,\n        left: props.item.x,\n      }}\n    >\n      <div className=\"flex justify-end p-3\">\n        <div\n          ref={drag}\n          id={`${props.item.id}-drag-handle`}\n          className=\"card-drag-handle\"\n        ></div>\n      </div>\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const ItemTypes = {\n  CARD: \"card\",\n  COLLECTION: \"collection\",\n};\n\nexport interface ICanvasCard {\n  type: string;\n  id: string;\n  // The x,y co-ords of the element\n  x: number;\n  y: number;\n}\n\nexport interface ICanvas {\n  id: string;\n  title: string;\n  items: ICanvasCard[];\n}\n\nexport interface INote {\n  id: string;\n  title: string;\n  createdTime: number;\n  lastEditedTime: number;\n  meta: object;\n  state: PMState;\n  text: string;\n}\n\n// JSON serialised prosemirror state returned by state.toJSON()\nexport interface PMState {\n  doc: any;\n  selection: object;\n}\n\nexport interface SearchResult {\n  rows: SearchResultRow[];\n  total_rows: number;\n}\n\nexport interface SearchResultRow {\n  id: string;\n  score: number;\n  doc: INote;\n}\n\nexport interface IPeer {\n  id: string;\n  name?: string;\n}\n","import { InputRule } from \"@remirror/pm\";\nimport { LinkExtension as RemirrorLinkExtension } from \"remirror/extensions\";\nimport { markInputRule } from \"@remirror/core-utils\";\nimport { MarkPasteRule } from \"@remirror/pm/paste-rules\";\n\nclass LinkExtension extends RemirrorLinkExtension {\n  constructor(args) {\n    super(args);\n    this.addHandler(\"onClick\", (_, data) => {\n      window.open(data.href);\n      return true;\n    });\n  }\n\n  createInputRules(): InputRule[] {\n    return [\n      markInputRule({\n        regexp: (() => {\n          try {\n            return new RegExp(\"?<!!)[(.*?)]((.*?))\");\n          } catch {\n            return /[^!]\\[(.+?)\\]\\((.+?)\\)/;\n          }\n        })(),\n        type: this.type,\n        getAttributes: (matches: string[]) => {\n          const [_, text, href] = matches;\n          return { text: text, href: href };\n        },\n      }),\n    ];\n  }\n\n  // Overwrite the paste rule\n  createPasteRules(): MarkPasteRule[] {\n    return [];\n  }\n}\n\nexport default LinkExtension;\n","import { ImageExtension as RemirrorImageExtension } from \"remirror/extensions\";\nimport { InputRule } from \"@remirror/pm\";\nimport { nodeInputRule } from \"@remirror/core-utils\";\n\nclass ImageExtension extends RemirrorImageExtension {\n  createInputRules(): InputRule[] {\n    return [\n      nodeInputRule({\n        regexp: /!\\[(.+?)\\]\\((.+?)\\)/,\n        type: this.type,\n        getAttributes: (matches: string[]) => {\n          const [_, alt, src] = matches;\n          return { src: src, alt: alt };\n        },\n      }),\n    ];\n  }\n}\n\nexport default ImageExtension;\n","import \"remirror/styles/all.css\";\nimport \"./remirror-editor.css\";\nimport React, { forwardRef, useCallback, useImperativeHandle } from \"react\";\nimport {\n  BoldExtension,\n  BlockquoteExtension,\n  CodeExtension,\n  HeadingExtension,\n  ItalicExtension,\n  BulletListExtension,\n  OrderedListExtension,\n  TaskListExtension,\n  UnderlineExtension,\n} from \"remirror/extensions\";\nimport {\n  EditorComponent,\n  ReactFrameworkOutput,\n  Remirror,\n  useRemirror,\n} from \"@remirror/react\";\nimport {\n  Extension,\n  InvalidContentHandler,\n  RemirrorEventListener,\n  RemirrorEventListenerProps,\n} from \"@remirror/core\";\nimport { PMState } from \"model/interfaces\";\nimport {\n  LinkExtension,\n  ImageExtension,\n} from \"components/remirror-editor/extensions\";\n\ninterface EditorProps {\n  onFocus?: (\n    params: RemirrorEventListenerProps<Extension>,\n    event: Event\n  ) => void;\n  onBlur?: (\n    params: RemirrorEventListenerProps<Extension>,\n    event: Event\n  ) => void;\n  onChange?: RemirrorEventListener<Extension>;\n  state?: PMState;\n}\n\nconst Editor = forwardRef<ReactFrameworkOutput<Extension>, EditorProps>(\n  (props: EditorProps, ref) => {\n    const handleOnError: InvalidContentHandler = useCallback(\n      ({ json, invalidContent, transformers }) => {\n        // Automatically remove all invalid nodes and marks.\n        return transformers.remove(json, invalidContent);\n      },\n      []\n    );\n\n    const { manager, state, setState, getContext } = useRemirror({\n      extensions: () => [\n        new BoldExtension({}),\n        new ItalicExtension(),\n        new BlockquoteExtension(),\n        new LinkExtension({ defaultTarget: \"_blank\", autoLink: true }),\n        new HeadingExtension({}),\n        new BulletListExtension({}),\n        new OrderedListExtension(),\n        new TaskListExtension(),\n        new ImageExtension({ enableResizing: true }),\n        new CodeExtension(),\n        new UnderlineExtension(),\n      ],\n      onError: handleOnError,\n      content: props.state?.doc,\n    });\n\n    useImperativeHandle(ref, () => getContext() as any, [getContext]);\n\n    return (\n      <div className=\"remirror-theme\">\n        <Remirror\n          manager={manager}\n          initialContent={state}\n          onChange={(params) => {\n            setState(params.state);\n            props.onChange?.(params);\n          }}\n          onFocus={(params, event) => {\n            props.onFocus?.(params, event);\n          }}\n          onBlur={(params, event) => {\n            props.onBlur?.(params, event);\n          }}\n        >\n          <EditorComponent />\n        </Remirror>\n      </div>\n    );\n  }\n);\n\nexport default Editor;\n","import PouchDB from \"pouchdb\";\nimport Upsert from \"pouchdb-upsert\";\nimport { INote, PMState, SearchResult } from \"model/interfaces\";\nimport QuickSearch from \"pouchdb-quick-search\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Debug from \"pouchdb-debug\";\n\nPouchDB.plugin(Upsert);\nPouchDB.plugin(QuickSearch);\n\n//Enables debugging\n// PouchDB.plugin(Debug);\n// PouchDB.debug.enable(\"*\");\n\nlet db = new PouchDB(\"notes\");\n\n(db as any)\n  .search({ fields: [\"title\", \"text\"], build: true })\n  .then(() => console.log(\"Index created succesfully\"))\n  .catch((err) => console.log(\"ERROR failed to build index\"));\n\nexport const defaultState = { type: \"doc\", content: [{ type: \"paragraph\" }] };\n\nexport async function updateNote(inputDocument: INote) {\n  try {\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const response = await db.upsert(docId, (doc) => {\n      return inputDocument as Partial<PouchDB.Core.IdMeta>;\n    });\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't update \\n${error}`);\n  }\n}\n\n// Create a new note\nexport async function insertNote(\n  id?: string,\n  title?: string,\n  meta?: object,\n  state?: PMState,\n  createdTime?: string,\n  lastEditedTime?: string\n) {\n  try {\n    let newDocument = {\n      _id: id || uuidv4(),\n      id: null,\n      title: title || null,\n      meta: meta || {},\n      state: state || defaultState,\n      createdTime: createdTime || Date.now(),\n      lastEditedTime: lastEditedTime || Date.now(),\n    };\n\n    newDocument.id = newDocument._id;\n    const storedDocument = await db.putIfNotExists(newDocument);\n    return storedDocument;\n  } catch (error) {\n    console.log(`ERROR: couldn't create doc ${error}`);\n  }\n}\n\nexport async function deleteNote(id: string) {\n  try {\n    const rev = await db.get(id).then((res) => res._rev);\n    const response = await db.remove(id, rev);\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't delete \\n${error}`);\n  }\n}\n\nexport async function getNotes(): Promise<\n  PouchDB.Core.ExistingDocument<PouchDB.Core.AllDocsMeta>[]\n> {\n  try {\n    let result = await db.allDocs({ include_docs: true });\n    return result?.rows?.map((row) => row.doc);\n  } catch (error) {\n    console.log(`ERROR fetching all notes \\n${error}`);\n  }\n}\n\nexport async function getNoteById(id: string) {\n  try {\n    const doc = await db.get(id);\n    return doc;\n  } catch (error) {\n    console.log(`ERROR fetching  ${id} \\n${error}`);\n  }\n}\n\nexport function onChange(callback) {\n  db.changes({\n    since: \"now\",\n    live: true,\n  }).on(\"change\", () => callback());\n}\n\nexport async function search(\n  query: string,\n  fields = [\"title\", \"text\"]\n): Promise<SearchResult> {\n  return (db as any)\n    ?.search({ query: query, fields: fields, include_docs: true })\n    .then((res) => res)\n    .catch((err) => console.log(`Search failed ${err}`));\n}\n","import React from \"react\";\n\nexport let defaultContextValue = {\n  items: [],\n  addItem: (items, item) => {\n    // const { items } = defaultContextValue;\n    defaultContextValue.items = addArrayItem(items, item);\n  },\n  removeItem: (items, item) => {\n    // const { items } = defaultContextValue;\n    defaultContextValue.items = removeArrayItem(items, item);\n  },\n};\n\nexport const removeArrayItem = (array: any[], item: any): any[] =>\n  array.filter((x) => x !== item);\n\nexport const addArrayItem = (array: any[], item: any): any[] =>\n  !array.find((x) => x === item) ? [...array, item] : array;\n\nconst NotesContext = React.createContext(defaultContextValue);\nNotesContext.displayName = \"NotesContext\";\nexport default NotesContext;\n","import React, { useContext } from \"react\";\nimport { INote } from \"model/interfaces\";\nimport { deleteNote } from \"db/pouch/notes\";\nimport { FiTrash, FiX } from \"react-icons/fi\";\nimport Modal, { Styles } from \"react-modal\";\nimport NotesContext from \"components/NotesContext\";\n\ninterface NoteOptionsModalProps {\n  note?: INote;\n  isOpen?: boolean;\n  onAfterOpen?;\n  onRequestClose?;\n}\n\nconst modalStyle: Styles = {\n  content: {\n    borderRadius: \".5rem\",\n    height: \"fit-content\",\n    maxWidth: \"40rem\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n};\n\nconst NoteOptionsModal = (props: NoteOptionsModalProps) => {\n  Modal.setAppElement(\"#root\");\n\n  const { items, removeItem } = useContext(NotesContext);\n\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onAfterClose={props.onAfterOpen}\n      onRequestClose={props.onRequestClose}\n      style={modalStyle}\n    >\n      <div>\n        <h1 className=\"text-center mb-2\">actions</h1>\n        <div className=\"flex flex-col space-y-4\">\n          <button\n            className=\"w-full h-16 rounded-lg shadow-md hover:shadow-lg hover:bg-gray-200\"\n            onClick={() => {\n              removeItem(items, props.note.id);\n              props.onRequestClose();\n            }}\n          >\n            <FiX className=\"mx-auto\" /> Close\n          </button>\n\n          <button\n            className=\"w-full h-16 rounded-lg shadow-md bg-red-500 text-white hover:shadow-lg hover:bg-red-600\"\n            onClick={() => {\n              removeItem(items, props.note.id);\n              deleteNote(props.note.id);\n              props.onRequestClose();\n            }}\n          >\n            <FiTrash className=\"mx-auto\" /> Delete\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NoteOptionsModal;\n","/* Manage the editor's interaction with the db & global state */\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport Editor from \"components/remirror-editor/remirror-editor\";\nimport { updateNote, getNoteById } from \"db/pouch/notes\";\nimport { useState } from \"react\";\nimport { ReactFrameworkOutput } from \"@remirror/react\";\nimport { Extension } from \"@remirror/core\";\nimport NoteOptionsModal from \"components/note-options-modal/note-options-modal\";\nimport \"./editor-container.css\";\n\ninterface EditorContainerProps {\n  id: string;\n  handleFocus?;\n}\n\nconst EditorContainer = (props: EditorContainerProps) => {\n  const [note, setNote] = useState<any>();\n  const [focused, setFocused] = useState(false);\n  const [noteOptionsOpen, setNoteOptionsOpen] = useState<boolean>(false);\n\n  const ctxRef = useRef<ReactFrameworkOutput<Extension>>();\n\n  const initialiseNote = useCallback(async () => {\n    if (props.id) {\n      // try fetch the note from the db\n      let doc = await getNoteById(props.id);\n      if (doc) {\n        setNote(doc);\n      }\n    }\n  }, [props.id]);\n\n  // On init\n  useEffect(() => {\n    void initialiseNote();\n  }, [initialiseNote]);\n\n  const handleOnChange = useCallback(\n    (params) => {\n      const updatedNote = {\n        ...note,\n        state: params.state.toJSON(),\n        lastEditedTime: Date.now(),\n      };\n      setNote(updatedNote);\n    },\n    [note]\n  );\n\n  const handleBlur = useCallback(\n    (params, e) => {\n      note.text = ctxRef.current?.getState().doc.textContent;\n      void updateNote(note);\n      setFocused(false);\n    },\n    [note]\n  );\n\n  const handleFocus = useCallback((params, e) => {\n    setFocused(true);\n    props.handleFocus?.(ctxRef.current);\n  }, []);\n\n  if (!note) return null;\n\n  return (\n    <>\n      <div className=\"w-full md:w-5/12 lg:w-1/3 shadow-lg rounded-lg p-5 lg:mr-4 mb-4 editor-container\">\n        <div className=\"flex justify-between\">\n          <textarea\n            placeholder=\"Title\"\n            defaultValue={note?.title}\n            className=\"font-medium text-3xl w-11/12\"\n            onChange={(e) => {\n              let title = e.target.value;\n              title.replace(/\\n/, \"\");\n              note.title = title;\n              updateNote(note);\n            }}\n            wrap=\"soft\"\n          />\n          <div className=\"flex space-x-2\">\n            <button\n              className=\"h-4 w-4 rounded-full bg-black hover:bg-gray-700\"\n              onClick={() => setNoteOptionsOpen(true)}\n            />\n          </div>\n        </div>\n        <Editor\n          state={note.state}\n          onChange={handleOnChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          ref={ctxRef}\n        />\n      </div>\n      <NoteOptionsModal\n        isOpen={noteOptionsOpen}\n        note={note}\n        onRequestClose={() => {\n          setNoteOptionsOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default EditorContainer;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\n\ninterface NoteListProps {\n  handleNoteButtonClick(note: INote): any;\n}\n\nconst NoteList = (props: NoteListProps) => {\n  const [allNotes, setAllNotes] = useState([]);\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = await getNotes();\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n  }, [fetchAllNotes]);\n\n  return (\n    <div className=\"flex w-64 flex-col rounded items-center divide-y divide-gray-200 divide-opacity-50\">\n      {allNotes.map((note, idx) => {\n        const noteText = note?.state?.doc ? note.text : \"\";\n\n        return (\n          <button\n            className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n            key={idx}\n            onClick={() => {\n              props.handleNoteButtonClick(note);\n            }}\n          >\n            {note.title || noteText}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React, { useCallback, useState } from \"react\";\nimport { DndProvider, useDrop, XYCoord } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Card from \"components/card/card\";\nimport { ItemTypes, ICanvasCard, INote, ICanvas } from \"model/interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditorContainer from \"components/editor-container/editor-container\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS, UPDATE_ITEM } from \"store\";\nimport \"./canvas.css\";\nimport NoteList from \"components/note-list/note-list\";\n\nfunction CanvasContainer() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Canvas />\n    </DndProvider>\n  );\n}\n\nexport default CanvasContainer;\n\nconst Canvas = (props) => {\n  const debug = false;\n  const [mousePos, setMousePos] = useState<XYCoord>({ x: 0, y: 0 });\n  const [noteListPos, setNoteListPos] = useState<XYCoord>({ x: 0, y: 0 });\n\n  const cards: ICanvasCard[] = useSelector(\n    (state: { cards: ICanvasCard[] }) => state.cards\n  );\n  // const dispatch = useDispatch();\n\n  const [, drop] = useDrop({\n    accept: [ItemTypes.CARD, ItemTypes.COLLECTION],\n    drop: (item: ICanvasCard, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.x + delta.x);\n      const y = Math.round(item.y + delta.y);\n      item.type === ItemTypes.CARD\n        ? moveCardPosition(item.id, x, y)\n        : setNoteListPos({ x, y });\n\n      return { x, y };\n    },\n  });\n\n  const createCard = useCallback((x: number, y: number) => {\n    const newCard: ICanvasCard = {\n      type: ItemTypes.CARD,\n      id: uuidv4(),\n      x: x,\n      y: y,\n    };\n    // dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n  }, []);\n\n  const moveCardPosition = useCallback((id: string, x: number, y: number) => {\n    // dispatch({ type: UPDATE_ITEM, payload: { id: id, x: x, y: y } });\n  }, []);\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    // dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div\n      className=\"canvas\"\n      ref={drop}\n      onMouseMove={(e) => {\n        setMousePos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      }}\n      onDoubleClick={(e) => {\n        createCard(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      }}\n    >\n      {debug && (\n        <span style={{ color: \"white\" }}>\n          x: {mousePos.x},y: {mousePos.y}\n        </span>\n      )}\n\n      <Card\n        item={{\n          type: ItemTypes.COLLECTION,\n          id: uuidv4(),\n          x: noteListPos.x,\n          y: noteListPos.y,\n        }}\n      >\n        <NoteList handleNoteButtonClick={addNoteToCanvas} />\n      </Card>\n\n      {Object.entries(cards).map(([key, card], index) => (\n        <Card key={index} item={card} hideSourceOnDrag>\n          <EditorContainer id={card.id} />\n        </Card>\n      ))}\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { useState } from \"react\";\nimport { VscSearch } from \"react-icons/vsc\";\nimport { search } from \"db/pouch/notes\";\nimport \"./searchbar.css\";\nimport { SearchResult } from \"model/interfaces\";\nimport NotesContext from \"components/NotesContext\";\n\nexport default function SearchBar() {\n  const [focused, setFocused] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchResult>();\n\n  const { items, addItem } = useContext(NotesContext);\n\n  const Search = (query: string) => {\n    search(query).then((res) => setResults(res));\n  };\n\n  return (\n    <div className=\"relative shadow-sm\">\n      <div className=\"h-10 w-72  rounded-full flex justify-between pl-6 items-center relative\">\n        <input\n          placeholder=\"Search\"\n          className=\"w-3/4 h-full bg-transparent overflow-ellipsis\"\n          type=\"text\"\n          value={query}\n          onChange={(e) => {\n            const { value } = e.target;\n            setQuery(value);\n            Search(value);\n          }}\n          onFocus={(e) => setFocused(true)}\n          onBlur={(e) => setFocused(false)}\n        />\n        <button className=\"h-10 w-10 rounded-full bg-black text-white flex justify-center items-center\">\n          <VscSearch />\n        </button>\n      </div>\n\n      {query !== \"\" && results?.total_rows > 0 && (\n        <div className=\"search-results rounded-b-lg overflow-hidden\">\n          {results?.rows?.map((val, idx) => {\n            return (\n              <button\n                key={idx}\n                className=\"result\"\n                onClick={(_) => {\n                  addItem(items, val.doc.id);\n                  setQuery(\"\");\n                }}\n              >\n                {val.doc.title ?? val.doc.title}\n              </button>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Canvas from \"components/canvas/canvas\";\nimport SearchBar from \"components/searchbar/searchbar\";\n\nexport default function CanvasWorkspace() {\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <Canvas />\n    </div>\n  );\n}\n","import React, { useCallback, useContext } from \"react\";\nimport { VscAdd } from \"react-icons/vsc\";\nimport { insertNote } from \"db/pouch/notes\";\nimport NotesContext from \"components/NotesContext\";\n\nexport default function AddNoteFAB(props) {\n  const { items, addItem } = useContext(NotesContext);\n\n  const createCard = useCallback(async () => {\n    let newNote = await insertNote();\n    addItem(items, newNote.id);\n  }, [addItem, items]);\n\n  return (\n    <button\n      onClick={() => {\n        createCard();\n        props?.handleClick?.();\n      }}\n      className=\"rounded-full h-16 w-16 fixed right-8 bottom-8 bg-black text-white flex justify-center items-center shadow-md hover:pointer border-2 border-white\"\n    >\n      <VscAdd />\n    </button>\n  );\n}\n","import { useCommands, useActive, useRemirrorContext } from \"@remirror/react\";\nimport { BsTypeUnderline } from \"react-icons/bs\";\nimport {\n  VscBold,\n  VscChecklist,\n  VscCode,\n  VscDiscard,\n  VscItalic,\n  VscListUnordered,\n  VscQuote,\n  VscRedo,\n} from \"react-icons/vsc\";\nimport \"./toolbar.css\";\n\nconst ActiveClass = (isActive: boolean) => {\n  return isActive ? \"active\" : \"\";\n};\n\nconst Toolbar = () => {\n  const commands = useCommands();\n  const active = useActive();\n\n  return (\n    <div className=\"toolbar space-x-2\">\n      <button\n        onClick={() => {\n          commands.undo();\n          commands.focus();\n        }}\n      >\n        <VscDiscard />\n      </button>\n\n      <button\n        onClick={() => {\n          commands.redo();\n          commands.focus();\n        }}\n      >\n        <VscRedo />\n      </button>\n\n      <button\n        className={ActiveClass(active.bold())}\n        onClick={() => {\n          commands.toggleBold();\n          commands.focus();\n        }}\n      >\n        <VscBold />\n      </button>\n      <button\n        className={ActiveClass(active.italic())}\n        onClick={() => {\n          commands.toggleItalic();\n          commands.focus();\n        }}\n      >\n        <VscItalic />\n      </button>\n\n      <button\n        className={ActiveClass(active.underline())}\n        onClick={() => {\n          commands.toggleUnderline();\n          commands.focus();\n        }}\n      >\n        <BsTypeUnderline />\n      </button>\n      <button\n        className={ActiveClass(active.code())}\n        onClick={() => {\n          commands.toggleCode();\n          commands.focus();\n        }}\n      >\n        <VscCode />\n      </button>\n\n      <button\n        className={ActiveClass(active.blockquote())}\n        onClick={() => {\n          commands.toggleBlockquote();\n          commands.focus();\n        }}\n      >\n        <VscQuote />\n      </button>\n\n      <button\n        className={ActiveClass(active.bulletList())}\n        onClick={() => {\n          commands.toggleBulletList();\n          commands.focus();\n        }}\n      >\n        <VscListUnordered />\n      </button>\n\n      <button\n        className={ActiveClass(active.taskList())}\n        onClick={() => {\n          commands.toggleTaskList();\n          commands.focus();\n        }}\n      >\n        <VscChecklist />\n      </button>\n    </div>\n  );\n};\n\nexport default Toolbar;\n","import React, { useEffect, useContext, useState } from \"react\";\nimport { useNavigate } from \"@reach/router\";\nimport EditorContainer from \"components/editor-container/editor-container\";\nimport AddNoteFAB from \"components/add-note-fab/add-note-fab\";\nimport { ReactFrameworkOutput, RemirrorContext } from \"@remirror/react-core\";\nimport Toolbar from \"components/remirror-editor/toolbar\";\nimport NotesContext from \"components/NotesContext\";\nimport \"./panel-workspace.css\";\n\nexport default function PanelWorkspace() {\n  const { items } = useContext(NotesContext);\n\n  const [focusedEditorContext, setEditorContext] =\n    useState<ReactFrameworkOutput<any>>();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (items.length === 0) {\n      navigate(\"/experiment-501.V2\");\n    }\n  }, [items]);\n\n  return (\n    <>\n      <div className=\"editor-list\">\n        {items.map((item, idx) => (\n          <EditorContainer\n            key={idx}\n            id={item}\n            handleFocus={(editorCtx) => setEditorContext(editorCtx)}\n          />\n        ))}\n      </div>\n\n      {focusedEditorContext && (\n        <RemirrorContext.Provider value={focusedEditorContext}>\n          <Toolbar />\n        </RemirrorContext.Provider>\n      )}\n      <AddNoteFAB />\n    </>\n  );\n}\n","import { useNavigate } from \"@reach/router\";\nimport React, { FunctionComponent } from \"react\";\nimport { BsGearWideConnected } from \"react-icons/bs\";\n\ninterface SettingsFabProps {}\n\nconst SettingsFab: FunctionComponent<SettingsFabProps> = () => {\n  const navigate = useNavigate();\n  return (\n    <button\n      onClick={() => navigate(\"/experiment-501.V2/settings\")}\n      className=\"rounded-full h-16 w-16 fixed left-8 bottom-8 hover:bg-black hover:text-white flex justify-center items-center shadow-md hover:pointer\"\n    >\n      <BsGearWideConnected />\n    </button>\n  );\n};\n\nexport default SettingsFab;\n","import React, { useContext, useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\nimport { useNavigate } from \"@reach/router\";\nimport AddNoteFAB from \"components/add-note-fab/add-note-fab\";\nimport { VscKebabVertical } from \"react-icons/vsc\";\nimport NoteOptionsModal from \"components/note-options-modal/note-options-modal\";\nimport \"./library.css\";\nimport NotesContext from \"components/NotesContext\";\nimport SettingsFab from \"components/settings-fab/settings-fab\";\n\nexport default function Library() {\n  const [allNotes, setAllNotes] = useState<INote[]>([]);\n  const [noteOptionsOpen, setNoteOptionsOpen] = useState<boolean>(false);\n  const [selectedNote, setSelectedNote] = useState<INote>();\n\n  const navigate = useNavigate();\n  const { items, addItem } = useContext(NotesContext);\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = (await getNotes()) as any;\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  const openNoteOptions = (note: INote) => {\n    setSelectedNote(note);\n    setNoteOptionsOpen(true);\n  };\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n\n    return () => {\n      setAllNotes([]);\n    };\n  }, [fetchAllNotes]);\n\n  return (\n    <>\n      <div className=\"p-5\">\n        <table className=\"rounded-lg divide-y divide-gray-200 note-list shadow-md\">\n          <thead>\n            <tr>\n              <th className=\"w-11/12 lg:w-9/12\">Note</th>\n              <th className=\"hidden lg:block w-2/12\">Edited</th>\n              <th className=\"w-1/12\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {allNotes\n              .sort((a, b) => (a.lastEditedTime < b.lastEditedTime ? 1 : -1)) // Sort by last edited date descending\n              .map((note, idx) => {\n                return (\n                  <tr key={idx} id={`row-${note.id}`}>\n                    <td>\n                      <button\n                        className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n                        onClick={() => {\n                          addItem(items, note.id);\n                          navigate(\"/experiment-501.V2/p\");\n                        }}\n                      >\n                        <div className=\"flex flex-col text-left\">\n                          <div className=\"font-medium flex space-x-1\">\n                            <span>{note.title || \"No Title\"}</span>\n                            <span\n                              className={`rounded-full h-2 w-2 bg-green-500 ${\n                                items.find((el) => el == note.id)\n                                  ? \"inline\"\n                                  : \"hidden\"\n                              } `}\n                            ></span>\n                          </div>\n                          <span className=\"text-sm text-gray-500 font-light\">\n                            {note.text || \"empty\"}\n                          </span>\n                        </div>\n                      </button>\n                    </td>\n                    <td className=\"hidden md:block\">\n                      {new Date(note.lastEditedTime).toLocaleString()}\n                    </td>\n                    <td>\n                      <button onClick={() => openNoteOptions(note)}>\n                        <VscKebabVertical />\n                      </button>\n                    </td>\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n\n        <SettingsFab />\n        <AddNoteFAB handleClick={() => navigate(\"/experiment-501.V2/p\")} />\n      </div>\n\n      <NoteOptionsModal\n        isOpen={noteOptionsOpen}\n        note={selectedNote}\n        onRequestClose={() => {\n          setSelectedNote(null);\n          setNoteOptionsOpen(false);\n        }}\n      />\n    </>\n  );\n}\n","import PouchDB from \"pouchdb\";\nimport Upsert from \"pouchdb-upsert\";\nimport { IPeer } from \"model/interfaces\";\n\nPouchDB.plugin(Upsert);\n\nlet db = new PouchDB(\"peers\");\n\nexport function onChange(callback) {\n  db.changes({\n    since: \"now\",\n    live: true,\n  }).on(\"change\", () => callback());\n}\n\nexport async function upsertPeer(inputPeer: IPeer) {\n  try {\n    const docId = inputPeer.id || inputPeer[\"_id\"];\n    const response = await db.upsert(docId, (doc) => {\n      return inputPeer as Partial<PouchDB.Core.IdMeta>;\n    });\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't upsert \\n${error}`);\n  }\n}\n\nexport async function deletePeer(peerId: string) {\n  try {\n    const docId = peerId;\n    const rev = await db.get(docId).then((res) => res._rev);\n    const response = await db.remove(docId, rev);\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't delete \\n${error}`);\n  }\n}\n\nexport async function getPeers(): Promise<\n  PouchDB.Core.ExistingDocument<PouchDB.Core.AllDocsMeta>[]\n> {\n  try {\n    let result = await db.allDocs({ include_docs: true });\n    return result?.rows?.map((row) => row.doc);\n  } catch (error) {\n    console.log(`ERROR fetching all peers \\n${error}`);\n  }\n}\n","import Peer from \"peerjs\";\nimport { getNotes, updateNote } from \"db/pouch/notes\";\nimport { upsertPeer } from \"db/pouch/peers\";\nimport { IPeer } from \"model/interfaces\";\n\nlet id: string;\nlet peer: Peer;\nlet dataConnection: Peer.DataConnection;\n\nid = localStorage.getItem(\"peerId\");\n\ntry {\n  peer = new Peer(id);\n} catch {\n  peer = new Peer();\n  id = peer.id;\n}\n\npeer.on(\"open\", function (id) {\n  localStorage.setItem(\"peerId\", id);\n  console.log(\"My peer ID is: \" + id);\n});\n\npeer.on(\"connection\", (dataConnection) => {\n  console.log(`Connected to ${dataConnection.peer}`);\n  Object.keys(peer.connections).forEach((x) => {\n    addPeer(x);\n  });\n\n  dataConnection = dataConnection;\n  dataConnection.on(\"open\", () => {\n    // Emitted when the connection is established and ready-to-use.\n    dataConnection.on(\"data\", (data) => {\n      console.log(`Recieved data from ${dataConnection.peer}`);\n      console.log(data);\n      if (Array.isArray(data)) {\n        data.forEach((item) => updateNote(item));\n      }\n    });\n  });\n});\n\npeer.on(\"error\", (error) => {\n  console.error(error);\n});\n\nconst addPeer = (peerId: string) => {\n  let peer: IPeer = { id: peerId };\n  upsertPeer(peer);\n};\n\nexport function Connect(peerId: string) {\n  try {\n    dataConnection = peer.connect(peerId, { serialization: \"json\" });\n    Object.keys(peer.connections).forEach((x) => {\n      addPeer(x);\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function Replicate() {\n  try {\n    dataConnection.on(\"open\", async () => {\n      // Emitted when the connection is established and ready-to-use.\n      let dataToSend = await getNotes();\n      dataConnection.send(dataToSend);\n      console.log(\"data sent\");\n    });\n  } catch (e) {\n    console.log(e);\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { VscVm } from \"react-icons/vsc\";\nimport { getPeers, onChange } from \"db/pouch/peers\";\nimport { Connect, Replicate } from \"replication/webrtc\";\n\ninterface Props {}\n\nconst PeerConnections = () => {\n  const [peers, setPeers] = useState<any[]>([]);\n\n  useEffect(() => {\n    getPeers().then((val) => setPeers(val));\n    onChange((_) => getPeers().then((val) => setPeers(val)));\n\n    return () => {\n      setPeers([]);\n    };\n  }, []);\n\n  return (\n    <div className=\"flex space-x-2\">\n      {peers?.map((peer, idx) => (\n        <button\n          onClick={() => {\n            Connect(peer);\n            Replicate();  \n          }}\n          key={idx}\n          className=\"rounded-3xl shadow-lg bg-black text-white h-10 w-10 flex flex-col justify-center items-center overflow-hidden \"\n        >\n          <VscVm />\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default PeerConnections;\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"components/searchbar/searchbar\";\nimport { Connect, Replicate } from \"replication/webrtc\";\nimport QRCode from \"qrcode\";\nimport jsQR from \"jsqr\";\nimport PeerConnections from \"components/peer-connections/peer-connections\";\n\nexport default function Demo() {\n  const [peerId, setPeerId] = useState<string>(\"\");\n  const [dataToSend, setDataToSend] = useState<string>();\n  let qrcode;\n  let video;\n  let videoOutCanvasElement: HTMLCanvasElement;\n\n  const setupVideoStream = async () => {\n    const constraints = {\n      video: { facingMode: \"environment\", frameRate: { ideal: 10, max: 15 } },\n    };\n\n    let stream = await navigator.mediaDevices.getUserMedia(constraints);\n\n    video = document.getElementById(\"video\");\n    video.srcObject = stream;\n    video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n    video.play();\n  };\n\n  useEffect(() => {\n    // Generate QR Code\n    let canvas = document.getElementById(\"qrcode\");\n    QRCode?.toCanvas(canvas, localStorage.getItem(\"peerId\"));\n\n    // Read QR Code\n    videoOutCanvasElement = document.getElementById(\n      \"videoOutCanvas\"\n    ) as HTMLCanvasElement;\n  }, []);\n\n  let tick = () => {\n    if (video && video.readyState === video.HAVE_ENOUGH_DATA) {\n      let canvasCtx = videoOutCanvasElement.getContext(\"2d\");\n\n      videoOutCanvasElement.height = video.videoHeight;\n      videoOutCanvasElement.width = video.videoWidth;\n      canvasCtx.drawImage(\n        video,\n        0,\n        0,\n        videoOutCanvasElement.width,\n        videoOutCanvasElement.height\n      );\n      var imageData = canvasCtx.getImageData(\n        0,\n        0,\n        videoOutCanvasElement.width,\n        videoOutCanvasElement.height\n      );\n      var code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\",\n      });\n\n      if (code) {\n        console.log(\"Got QR Code\");\n        console.log(code.data);\n        setPeerId(code.data);\n      }\n    }\n    requestAnimationFrame(tick);\n  };\n\n  requestAnimationFrame(tick);\n\n  return (\n    <>\n      <div className=\"flex\">\n        <div className=\"flex flex-col\">\n          <input\n            className=\"border border-black\"\n            type=\"text\"\n            value={peerId}\n            onChange={(e) => {\n              setPeerId(e.target.value);\n            }}\n          />\n          <button\n            className=\"rounded bg-blue-500 text-white\"\n            onClick={(e) => {\n              Connect(peerId);\n            }}\n          >\n            Connect\n          </button>\n        </div>\n        <div className=\"flex flex-col\">\n          <textarea\n            className=\"border border-black\"\n            onChange={(e) => {\n              setDataToSend(e.target.value);\n            }}\n          ></textarea>\n          <button\n            className=\"bg-green-500 text-white rounded\"\n            onClick={(e) => {\n              Replicate();\n            }}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n\n      <PeerConnections />\n      <canvas id=\"videoOutCanvas\" hidden></canvas>\n      <video id=\"video\"></video>\n    </>\n  );\n}\n","import React, {\n  FunctionComponent,\n  useState,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport Modal, { Styles } from \"react-modal\";\nimport QRCode from \"qrcode\";\n\ninterface PeerDetailsModalProps {\n  isOpen?: boolean;\n  onAfterOpen?;\n  onRequestClose?;\n}\n\nconst modalStyle: Styles = {\n  content: {\n    borderRadius: \".5rem\",\n    height: \"fit-content\",\n    maxWidth: \"40rem\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nconst PeerDetailsModal: FunctionComponent<PeerDetailsModalProps> = (\n  props: PeerDetailsModalProps\n) => {\n  const [peerId, setPeerId] = useState<string>();\n  const [canvasEl, setCanvasEl] = useState(null);\n\n  const canvasRef = useCallback((node) => {\n    if (node !== null) {\n      setCanvasEl(node);\n    }\n  }, []);\n\n  useEffect(() => {\n    const storedPeerId = localStorage.getItem(\"peerId\");\n    setPeerId(storedPeerId);\n  }, []);\n\n  useEffect(() => {\n    if (canvasEl) QRCode?.toCanvas(canvasEl, peerId);\n  }, [peerId, canvasEl]);\n\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onAfterClose={props.onAfterOpen}\n      onRequestClose={props.onRequestClose}\n      style={modalStyle}\n    >\n      <div className=\"flex flex-col justify-center items-center\">\n        <canvas id=\"qrcode\" ref={canvasRef} />\n        <p className=\"text-center\">{peerId}</p>\n      </div>\n    </Modal>\n  );\n};\n\nexport default PeerDetailsModal;\n","import React, {\n  FunctionComponent,\n  useCallback,\n  useState,\n  useEffect,\n} from \"react\";\nimport Modal, { Styles } from \"react-modal\";\nimport jsQR from \"jsqr\";\n\ninterface QRCodeScannerProps {\n  isOpen?: boolean;\n  onAfterOpen?;\n  onRequestClose?;\n  onScanned?;\n}\nconst modalStyle: Styles = {\n  content: {\n    borderRadius: \".5rem\",\n    height: \"fit-content\",\n    maxWidth: \"40rem\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nconst QRCodeScanner: FunctionComponent<QRCodeScannerProps> = (props) => {\n  const [canvasEl, setCanvasEl] = useState(null);\n  const [videoEl, setVideoEl] = useState(null);\n  const [_, setScannedData] = useState<string>(\"\");\n  const [stream, setStream] = useState<MediaStream>();\n\n  const canvasRef = useCallback((node) => {\n    if (node !== null) {\n      setCanvasEl(node);\n    }\n  }, []);\n  const videoRef = useCallback((node) => {\n    if (node !== null) {\n      setVideoEl(node);\n    }\n  }, []);\n\n  useEffect(() => {\n    const constraints = {\n      video: { facingMode: \"environment\", frameRate: { ideal: 10, max: 15 } },\n    };\n\n    try {\n      navigator.mediaDevices.getUserMedia(constraints).then((mediaStream) => {\n        setStream(mediaStream);\n        if (videoEl) {\n          videoEl.srcObject = mediaStream;\n          videoEl.setAttribute(\"playsinline\", \"true\"); // required to tell iOS safari we don't want fullscreen\n          videoEl.play();\n          requestAnimationFrame(tick);\n        }\n      });\n    } catch (error) {\n      console.log(`Couldn't set up video stream \\n:${error}`);\n    }\n\n    return () => {\n      tick = null;\n      stream?.getTracks().forEach((track) => {\n        track.stop();\n      });\n    };\n  }, [videoEl]);\n\n  // Attempt to close the video stream while QRCode component is in the DOM\n  useEffect(() => {\n    if (!props.isOpen && stream?.active) {\n      stream.getTracks().forEach((track) => {\n        track.stop();\n      });\n    }\n  }, [props.isOpen, stream]);\n\n  let tick = () => {\n    if (videoEl && videoEl.readyState === videoEl.HAVE_ENOUGH_DATA) {\n      let canvasCtx = canvasEl.getContext(\"2d\");\n\n      canvasEl.height = videoEl.videoHeight;\n      canvasEl.width = videoEl.videoWidth;\n      canvasCtx.drawImage(videoEl, 0, 0, canvasEl.width, canvasEl.height);\n      var imageData = canvasCtx.getImageData(\n        0,\n        0,\n        canvasEl.width,\n        canvasEl.height\n      );\n      var code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\",\n      });\n\n      if (code?.data) {\n        console.log(\"Got QR Code\");\n        console.log(code.data);\n        setScannedData(code.data);\n        props?.onScanned(code.data);\n        tick = null;\n      }\n    }\n    if (tick) requestAnimationFrame(tick);\n  };\n\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onAfterClose={props.onAfterOpen}\n      onRequestClose={props.onRequestClose}\n      style={modalStyle}\n    >\n      <canvas id=\"videoOutCanvas\" ref={canvasRef} hidden></canvas>\n      <video id=\"video\" ref={videoRef}></video>\n    </Modal>\n  );\n};\n\nexport default QRCodeScanner;\n","import React, { FunctionComponent, useState } from \"react\";\nimport PeerDetailsModal from \"components/peer-details-modal/peer-details-modal\";\nimport { ImQrcode } from \"react-icons/im\";\nimport { BsUpcScan } from \"react-icons/bs\";\nimport PeerConnections from \"components/peer-connections/peer-connections\";\nimport QRCodeScanner from \"components/qr-code-scanner/qr-code-scanner\";\nimport { Connect, Replicate } from \"replication/webrtc\";\n\ninterface SettingsProps {}\n\nconst Settings: FunctionComponent<SettingsProps> = () => {\n  const [showPeerDetails, setShowPeerDetails] = useState(false);\n  const [showQRCodeScanner, setShowQRCodeScanner] = useState(false);\n  return (\n    <>\n      <div className=\"p-5\">\n        <div className=\"flex flex-col items-center\">\n          <h1>Connected Devices</h1>\n          <PeerConnections />\n\n          <h1>Add Devices</h1>\n          <div className=\"flex items-center justify-center w-full flex-wrap md:space-x-4\">\n            <button\n              className=\"rounded-3xl bg-black text-white flex space-x-1 p-2 items-center justify-center w-full md:w-1/3 mb-2\"\n              onClick={() => setShowPeerDetails(true)}\n            >\n              <ImQrcode /> <span>Show QR Code</span>\n            </button>\n            <button\n              className=\"rounded-3xl bg-black text-white flex space-x-1 p-2 items-center justify-center w-full md:w-1/3 mb-2\"\n              onClick={() => setShowQRCodeScanner(true)}\n            >\n              <BsUpcScan /> <span>Scan</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <PeerDetailsModal\n        isOpen={showPeerDetails}\n        onRequestClose={() => setShowPeerDetails(false)}\n      />\n\n      <QRCodeScanner\n        isOpen={showQRCodeScanner}\n        onRequestClose={() => setShowQRCodeScanner(false)}\n        onScanned={async (data) => {\n          Connect(data);\n          await Replicate();\n          setShowQRCodeScanner(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Settings;\n","import React, { FunctionComponent } from \"react\";\nimport { useNavigate } from \"@reach/router\";\nimport { VscChevronLeft } from \"react-icons/vsc\";\n\ninterface BackButtonProps {}\n\nconst BackButton: FunctionComponent<BackButtonProps> = () => {\n  const navigate = useNavigate();\n  return (\n    <button\n      className=\"h-8 w-8 hover:bg-black hover:text-white rounded-full flex justify-center items-center\"\n      onClick={() => navigate(-1)}\n    >\n      <VscChevronLeft />\n    </button>\n  );\n};\n\nexport default BackButton;\n","import React, { FunctionComponent } from \"react\";\nimport BackButton from \"components/back-button/back-button\";\nimport SearchBar from \"components/searchbar/searchbar\";\n\ninterface AppShellProps {}\n\nconst AppShell: FunctionComponent<AppShellProps> = (props) => {\n  return (\n    <div className=\"min-h-screen max-w-full\">\n      <div className=\"w-full flex justify-between items-center mb-2 p-2\">\n        <BackButton />\n        <div className=\"hidden md:inline-block\">\n          <SearchBar />\n        </div>\n      </div>\n      {props.children}\n    </div>\n  );\n};\n\nexport default AppShell;\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport FadeInTransitionRouter from \"./FadeInTransitionRouter\";\nimport CanvasWorkspace from \"pages/canvas-workspace\";\nimport PanelWorkspace from \"pages/panel-workspace/panel-workspace\";\nimport Library from \"pages/library/library\";\nimport Demo from \"pages/demo\";\nimport Settings from \"pages/settings/settings\";\nimport AppShell from \"components/shell/shell\";\n\nexport default function Routes(props) {\n  return (\n    <FadeInTransitionRouter>\n      <Redirect from=\"/\" to=\"experiment-501.V2\" noThrow />\n      <AppShell path=\"/experiment-501.V2\">\n        <CanvasWorkspace path=\"/c\" />\n        <PanelWorkspace path=\"/p\" />\n        <Library path=\"/\" />\n        <Settings path=\"/settings\" />\n        <Demo path=\"/demo\" />\n      </AppShell>\n    </FadeInTransitionRouter>\n  );\n}\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport Routes from \"router/Routes\";\nimport \"./App.css\";\nimport NoteContext, {\n  addArrayItem,\n  removeArrayItem,\n} from \"components/NotesContext\";\n\nfunction App() {\n  const [noteContext, setNoteContext] = useState({\n    items: [],\n    addItem: (items, item) => {\n      if (!items.find((x) => x === item)) {\n        setNoteContext({\n          ...noteContext,\n          items: addArrayItem(items, item),\n        });\n      }\n    },\n    removeItem: (items, item) => {\n      setNoteContext({\n        ...noteContext,\n        items: removeArrayItem(items, item),\n      });\n    },\n  });\n\n  const contextValue = useMemo(() => noteContext, [noteContext]);\n\n  return (\n    <div className=\"App\">\n      <NoteContext.Provider value={contextValue}>\n        <Routes />\n      </NoteContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}