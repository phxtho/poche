{"version":3,"sources":["../node_modules/peerjs/dist sync","router/FadeInTransitionRouter/index.tsx","router/NestedRoute.tsx","components/card/card.tsx","model/interfaces.ts","components/remirror-editor/extensions/link-extension/link-extention.ts","components/remirror-editor/extensions/image-extension/image-extension.ts","components/remirror-editor/remirror-editor.tsx","db/pouch/notes.ts","store/index.ts","components/note-options-modal/note-options-modal.tsx","components/editor-container/editor-container.tsx","components/note-list/note-list.tsx","components/canvas/canvas.tsx","components/searchbar/searchbar.tsx","pages/canvas-workspace.tsx","components/add-note-fab/add-note-fab.tsx","pages/panel-workspace/panel-workspace.tsx","pages/library/library.tsx","replication/webrtc.ts","pages/demo.tsx","router/Routes.jsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","FadeInTransitionRouter","props","location","TransitionGroup","className","CSSTransition","classNames","timeout","children","key","NestedRoute","Card","useDrag","item","collect","monitor","isDragging","drag","preview","ref","style","display","hideSourceOnDrag","opacity","top","y","left","x","ItemTypes","LinkExtension","args","addHandler","_","data","window","open","href","markInputRule","regexp","RegExp","type","this","getAttributes","matches","text","RemirrorLinkExtension","ImageExtension","nodeInputRule","alt","src","RemirrorImageExtension","Editor","forwardRef","handleOnError","useCallback","json","invalidContent","transformers","remove","useRemirror","extensions","BoldExtension","ItalicExtension","BlockquoteExtension","defaultTarget","autoLink","HeadingExtension","BulletListExtension","OrderedListExtension","TaskListExtension","enableResizing","CodeExtension","onError","content","state","doc","manager","setState","getContext","useImperativeHandle","initialContent","onChange","params","onFocus","event","onBlur","PouchDB","plugin","Upsert","QuickSearch","db","search","fields","build","then","console","log","catch","err","defaultState","updateNote","inputDocument","a","docId","upsert","response","insertNote","title","meta","createdTime","lastEditedTime","newDocument","_id","uuidv4","Date","now","putIfNotExists","storedDocument","get","res","_rev","rev","getNotes","allDocs","include_docs","result","rows","map","row","getNoteById","callback","changes","since","live","on","query","ADD_ITEM_TO_CANVAS","REMOVE_ITEM_FROM_CANVAS","UPDATE_ITEM","openCanvas","items","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","payload","find","update","$push","filter","oldItem","itemIdx","indexOf","$merge","modalStyle","borderRadius","height","NoteOptionsModal","Modal","setAppElement","dispatch","useDispatch","isOpen","onAfterClose","onAfterOpen","onRequestClose","onClick","note","deleteNote","SET_NOTE","SET_NOTE_STATE","NEW_NOTE","reducer","currentTime","EditorContainer","useReducer","reduxDispatch","useState","setFocused","noteOptionsOpen","setNoteOptionsOpen","ctxRef","useRef","initialiseNote","useEffect","handleOnChange","toJSON","handleBlur","current","getState","textContent","placeholder","defaultValue","target","value","replace","wrap","NoteList","allNotes","setAllNotes","fetchAllNotes","idx","noteText","handleNoteButtonClick","CanvasContainer","DndProvider","backend","HTML5Backend","Canvas","setMousePos","noteListPos","setNoteListPos","cards","useSelector","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","moveCardPosition","createCard","newCard","onMouseMove","nativeEvent","offsetX","offsetY","onDoubleClick","Object","entries","index","card","SearchBar","setQuery","results","setResults","Search","total_rows","val","addNoteToCanvas","CanvasWorkspace","AddNoteFAB","handleClick","PanelWorkspace","navigate","useNavigate","length","Library","selectedNote","setSelectedNote","openCanvasCards","sort","b","el","toLocaleString","openNoteOptions","Replicator","peer","dataConnection","localStorage","getItem","Peer","setItem","Array","isArray","forEach","error","peerId","connect","serialization","dataToSend","send","Demo","video","canvasElement","setPeerId","setDataToSend","replicator","setReplicator","canvas","document","getElementById","QRCode","toCanvas","navigator","mediaDevices","getUserMedia","facingMode","stream","srcObject","setAttribute","play","requestAnimationFrame","tick","readyState","HAVE_ENOUGH_DATA","canvasCtx","videoHeight","width","videoWidth","drawImage","imageData","getImageData","jsQR","inversionAttempts","Connect","Replicate","hidden","Routes","from","to","noThrow","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","URL","process","origin","addEventListener","fetch","headers","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fb3a9c9b.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 459;","import { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { Router, Location } from \"@reach/router\";\nimport \"./style.css\";\n\nconst FadeInTransitionRouter = (props) => {\n  return (\n    <Location>\n      {({ location }) => (\n        <TransitionGroup className=\"transition-group\">\n          <CSSTransition key={location.key} classNames=\"fade\" timeout={500}>\n            <Router location={location}>{props.children}</Router>\n          </CSSTransition>\n        </TransitionGroup>\n      )}\n    </Location>\n  );\n};\n\nexport default FadeInTransitionRouter;\n","const NestedRoute = ({ children }) => {\n  return children;\n};\n\nexport default NestedRoute;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ICanvasCard } from \"model/interfaces\";\nimport \"./card.css\";\n\ndeclare interface CardProps {\n  item: ICanvasCard;\n  onRemove?;\n  hideSourceOnDrag?: boolean;\n  children?: any;\n}\n\nconst Card = (props: CardProps) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: props.item,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      id={props.item.id}\n      ref={preview}\n      className=\"card\"\n      style={{\n        display: isDragging && props.hideSourceOnDrag ? \"none\" : \"flex\",\n        opacity: isDragging ? 0.5 : 1,\n        top: props.item.y,\n        left: props.item.x,\n      }}\n    >\n      <div className=\"flex justify-end p-3\">\n        <div\n          ref={drag}\n          id={`${props.item.id}-drag-handle`}\n          className=\"card-drag-handle\"\n        ></div>\n      </div>\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const ItemTypes = {\n  CARD: \"card\",\n  COLLECTION: \"collection\",\n};\n\nexport interface ICanvasCard {\n  type: string;\n  id: string;\n  // The x,y co-ords of the element\n  x: number;\n  y: number;\n}\n\nexport interface ICanvas {\n  id: string;\n  title: string;\n  items: ICanvasCard[];\n}\n\nexport interface INote {\n  id: string;\n  title: string;\n  createdTime: number;\n  lastEditedTime: number;\n  meta: object;\n  state: PMState;\n  text: string;\n}\n\n// JSON serialised prosemirror state returned by state.toJSON()\nexport interface PMState {\n  doc: any;\n  selection: object;\n}\n\nexport interface SearchResult {\n  rows: SearchResultRow[];\n  total_rows: number;\n}\n\nexport interface SearchResultRow {\n  id: string;\n  score: number;\n  doc: INote;\n}\n","import { InputRule } from \"@remirror/pm\";\nimport { LinkExtension as RemirrorLinkExtension } from \"remirror/extensions\";\nimport { markInputRule } from \"@remirror/core-utils\";\nimport { MarkPasteRule } from \"@remirror/pm/paste-rules\";\n\nclass LinkExtension extends RemirrorLinkExtension {\n  constructor(args) {\n    super(args);\n    this.addHandler(\"onClick\", (_, data) => {\n      window.open(data.href);\n      return true;\n    });\n  }\n\n  createInputRules(): InputRule[] {\n    return [\n      markInputRule({\n        regexp: (() => {\n          try {\n            return new RegExp(\"?<!!)[(.*?)]((.*?))\");\n          } catch {\n            return /[^!]\\[(.+?)\\]\\((.+?)\\)/;\n          }\n        })(),\n        type: this.type,\n        getAttributes: (matches: string[]) => {\n          const [_, text, href] = matches;\n          return { text: text, href: href };\n        },\n      }),\n    ];\n  }\n\n  // Overwrite the paste rule\n  createPasteRules(): MarkPasteRule[] {\n    return [];\n  }\n}\n\nexport default LinkExtension;\n","import { ImageExtension as RemirrorImageExtension } from \"remirror/extensions\";\nimport { InputRule } from \"@remirror/pm\";\nimport { nodeInputRule } from \"@remirror/core-utils\";\n\nclass ImageExtension extends RemirrorImageExtension {\n  createInputRules(): InputRule[] {\n    return [\n      nodeInputRule({\n        regexp: /!\\[(.+?)\\]\\((.+?)\\)/,\n        type: this.type,\n        getAttributes: (matches: string[]) => {\n          const [_, alt, src] = matches;\n          return { src: src, alt: alt };\n        },\n      }),\n    ];\n  }\n}\n\nexport default ImageExtension;\n","import \"remirror/styles/all.css\";\nimport \"./remirror-editor.css\";\nimport React, { forwardRef, useCallback, useImperativeHandle } from \"react\";\nimport {\n  BoldExtension,\n  BlockquoteExtension,\n  CodeExtension,\n  HeadingExtension,\n  ItalicExtension,\n  BulletListExtension,\n  OrderedListExtension,\n  TaskListExtension,\n} from \"remirror/extensions\";\nimport {\n  EditorComponent,\n  ReactFrameworkOutput,\n  Remirror,\n  useRemirror,\n} from \"@remirror/react\";\nimport {\n  Extension,\n  InvalidContentHandler,\n  RemirrorEventListener,\n  RemirrorEventListenerProps,\n} from \"@remirror/core\";\nimport { PMState } from \"model/interfaces\";\nimport {\n  LinkExtension,\n  ImageExtension,\n} from \"components/remirror-editor/extensions\";\n\ninterface EditorProps {\n  onFocus?: (\n    params: RemirrorEventListenerProps<Extension>,\n    event: Event\n  ) => void;\n  onBlur?: (\n    params: RemirrorEventListenerProps<Extension>,\n    event: Event\n  ) => void;\n  onChange?: RemirrorEventListener<Extension>;\n  state?: PMState;\n}\n\nconst Editor = forwardRef<ReactFrameworkOutput<Extension>, EditorProps>(\n  (props: EditorProps, ref) => {\n    const handleOnError: InvalidContentHandler = useCallback(\n      ({ json, invalidContent, transformers }) => {\n        // Automatically remove all invalid nodes and marks.\n        return transformers.remove(json, invalidContent);\n      },\n      []\n    );\n\n    const { manager, state, setState, getContext } = useRemirror({\n      extensions: () => [\n        new BoldExtension({}),\n        new ItalicExtension(),\n        new BlockquoteExtension(),\n        new LinkExtension({ defaultTarget: \"_blank\", autoLink: true }),\n        new HeadingExtension({}),\n        new BulletListExtension({}),\n        new OrderedListExtension(),\n        new TaskListExtension(),\n        new ImageExtension({ enableResizing: true }),\n        new CodeExtension(),\n      ],\n      onError: handleOnError,\n      content: props.state?.doc,\n    });\n\n    useImperativeHandle(ref, () => getContext() as any, [getContext]);\n\n    return (\n      <div className=\"remirror-theme\">\n        <Remirror\n          manager={manager}\n          initialContent={state}\n          onChange={(params) => {\n            setState(params.state);\n            props.onChange?.(params);\n          }}\n          onFocus={(params, event) => {\n            props.onFocus?.(params, event);\n          }}\n          onBlur={(params, event) => {\n            props.onBlur?.(params, event);\n          }}\n        >\n          <EditorComponent />\n        </Remirror>\n      </div>\n    );\n  }\n);\n\nexport default Editor;\n","import PouchDB from \"pouchdb\";\nimport Upsert from \"pouchdb-upsert\";\nimport { INote, PMState, SearchResult } from \"model/interfaces\";\nimport QuickSearch from \"pouchdb-quick-search\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Debug from \"pouchdb-debug\";\n\nPouchDB.plugin(Upsert);\nPouchDB.plugin(QuickSearch);\n\n//Enables debugging\n// PouchDB.plugin(Debug);\n// PouchDB.debug.enable(\"*\");\n\nlet db = new PouchDB(\"notes\");\n\n(db as any)\n  .search({ fields: [\"title\", \"text\"], build: true })\n  .then(() => console.log(\"Index created succesfully\"))\n  .catch((err) => console.log(\"ERROR failed to build index\"));\n\nexport const defaultState = { type: \"doc\", content: [{ type: \"paragraph\" }] };\n\nexport async function updateNote(inputDocument: INote) {\n  try {\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const response = await db.upsert(docId, (doc) => {\n      return inputDocument as Partial<PouchDB.Core.IdMeta>;\n    });\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't update \\n${error}`);\n  }\n}\n\n// Create a new note\nexport async function insertNote(\n  id?: string,\n  title?: string,\n  meta?: object,\n  state?: PMState,\n  createdTime?: string,\n  lastEditedTime?: string\n) {\n  try {\n    let newDocument = {\n      _id: id || uuidv4(),\n      title: title || null,\n      meta: meta || {},\n      state: state || defaultState,\n      createdTime: createdTime || Date.now(),\n      lastEditedTime: lastEditedTime || Date.now(),\n    };\n\n    const storedDocument = await db.putIfNotExists(newDocument);\n    return storedDocument;\n  } catch (error) {\n    console.log(`ERROR: couldn't create doc ${error}`);\n  }\n}\n\nexport async function deleteNote(inputDocument: INote) {\n  try {\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const rev = await db.get(docId).then((res) => res._rev);\n    const response = await db.remove(docId, rev);\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't delete \\n${error}`);\n  }\n}\n\nexport async function getNotes(): Promise<\n  PouchDB.Core.ExistingDocument<PouchDB.Core.AllDocsMeta>[]\n> {\n  try {\n    let result = await db.allDocs({ include_docs: true });\n    return result?.rows?.map((row) => row.doc);\n  } catch (error) {\n    console.log(`ERROR fetching all notes \\n${error}`);\n  }\n}\n\nexport async function getNoteById(id: string) {\n  try {\n    const doc = await db.get(id);\n    return doc;\n  } catch (error) {\n    console.log(`ERROR fetching  ${id} \\n${error}`);\n  }\n}\n\nexport function onChange(callback) {\n  db.changes({\n    since: \"now\",\n    live: true,\n  }).on(\"change\", () => callback());\n}\n\nexport async function search(\n  query: string,\n  fields = [\"title\", \"text\"]\n): Promise<SearchResult> {\n  return (db as any)\n    ?.search({ query: query, fields: fields, include_docs: true })\n    .then((res) => res)\n    .catch((err) => console.log(`Search failed ${err}`));\n}\n","import { createStore, compose } from \"redux\";\nimport { ICanvas } from \"model/interfaces\";\nimport update from \"immutability-helper\";\n\nexport const ADD_ITEM_TO_CANVAS = \"ADD_ITEM_TO_CANVAS\";\nexport const REMOVE_ITEM_FROM_CANVAS = \"REMOVE_ITEM_FROM_CANVAS\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM_POSITION\";\n\nconst openCanvas: ICanvas = {\n  id: \"randomID\",\n  title: \"Main Canvas\",\n  items: [],\n};\n\nconst reducer = function (\n  state = { openCanvas: openCanvas },\n  { type, payload }\n) {\n  switch (type) {\n    case ADD_ITEM_TO_CANVAS:\n      const { items } = state.openCanvas;\n      if (!items.find((item) => item.id === payload?.id)) {\n        state.openCanvas.items = update(items, { $push: [payload] });\n        return state;\n      }\n      return state;\n    case REMOVE_ITEM_FROM_CANVAS:\n      state.openCanvas.items = state.openCanvas.items.filter(\n        (item) => item.id !== payload?.id\n      );\n      return state;\n    case UPDATE_ITEM:\n      const oldItem = state.openCanvas.items.find(\n        (item) => item.id === payload?.id\n      );\n\n      if (!oldItem) {\n        return state;\n      }\n\n      const itemIdx = state.openCanvas.items.indexOf(oldItem);\n      state.openCanvas.items = update(state.openCanvas.items, {\n        [itemIdx]: { $merge: { ...payload } },\n      });\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ || compose;\nlet store = createStore(reducer, composeEnhancers());\n\nexport default store;\n","import React from \"react\";\nimport { INote } from \"model/interfaces\";\nimport { deleteNote } from \"db/pouch/notes\";\nimport { FiDownload, FiTrash, FiTool } from \"react-icons/fi\";\nimport { useDispatch } from \"react-redux\";\nimport { REMOVE_ITEM_FROM_CANVAS } from \"store\";\nimport Modal, { Styles } from \"react-modal\";\n\ninterface NoteOptionsModalProps {\n  note?: INote;\n  isOpen?: boolean;\n  onAfterOpen?;\n  onRequestClose?;\n}\n\nconst modalStyle: Styles = {\n  content: {\n    borderRadius: \".5rem\",\n    height: \"fit-content\",\n  },\n};\n\nconst NoteOptionsModal = (props: NoteOptionsModalProps) => {\n  Modal.setAppElement(\"#root\");\n\n  const dispatch = useDispatch();\n\n  return (\n    <Modal\n      isOpen={props.isOpen}\n      onAfterClose={props.onAfterOpen}\n      onRequestClose={props.onRequestClose}\n      style={modalStyle}\n    >\n      <div>\n        <h1 className=\"text-center mb-2\">actions</h1>\n        <div className=\"flex flex-col space-y-4\">\n          <button\n            className=\"w-full h-16 rounded-lg shadow-md hover:shadow-lg hover:bg-gray-200\"\n            onClick={() => props.onRequestClose()}\n          >\n            <FiTool className=\"mx-auto\" /> Properties\n          </button>\n\n          <button\n            className=\"w-full h-16 rounded-lg shadow-md hover:shadow-lg hover:bg-gray-200\"\n            onClick={() => props.onRequestClose()}\n          >\n            <FiDownload className=\"mx-auto\" /> Download\n          </button>\n\n          <button\n            className=\"w-full h-16 rounded-lg shadow-md bg-red-500 text-white hover:shadow-lg hover:bg-red-600\"\n            onClick={() => {\n              dispatch({\n                type: REMOVE_ITEM_FROM_CANVAS,\n                payload: { id: props.note.id },\n              });\n              deleteNote(props.note);\n              props.onRequestClose();\n            }}\n          >\n            <FiTrash className=\"mx-auto\" /> Delete\n          </button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default NoteOptionsModal;\n","/* Manage the editor's interaction with the db & global state */\nimport React, { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport Editor from \"components/remirror-editor/remirror-editor\";\nimport { insertNote, updateNote, getNoteById } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\nimport { useDispatch } from \"react-redux\";\nimport { REMOVE_ITEM_FROM_CANVAS } from \"store\";\nimport { useState } from \"react\";\nimport { ReactFrameworkOutput } from \"@remirror/react\";\nimport { Extension } from \"@remirror/core\";\nimport NoteOptionsModal from \"components/note-options-modal/note-options-modal\";\n\ninterface EditorContainerProps {\n  id?: string;\n  note?: INote;\n}\n\nconst SET_NOTE = \"SET_NOTE\";\nconst SET_NOTE_STATE = \"SET_NOTE_STATE\";\nconst NEW_NOTE = \"NEW_NOTE\";\n\nconst reducer = (note: INote, { type, payload }) => {\n  switch (type) {\n    case SET_NOTE:\n      return payload;\n    case NEW_NOTE:\n      let currentTime = Date.now();\n      const newNote = {\n        ...payload,\n        createdTime: currentTime,\n        lastEditedTime: currentTime,\n      };\n      return newNote;\n    case SET_NOTE_STATE:\n      const updatedNote = {\n        ...note,\n        state: payload,\n        lastEditedTime: Date.now(),\n      };\n      return updatedNote;\n  }\n};\nconst EditorContainer = (props: EditorContainerProps) => {\n  const [note, dispatch] = useReducer(reducer, props.note);\n  const reduxDispatch = useDispatch();\n  const [focused, setFocused] = useState(false);\n  const [noteOptionsOpen, setNoteOptionsOpen] = useState<boolean>(false);\n\n  const ctxRef = useRef<ReactFrameworkOutput<Extension>>();\n\n  const initialiseNote = useCallback(async () => {\n    if (props.id) {\n      // try fetch the note from the db\n      let doc = await getNoteById(props.id);\n      if (doc) {\n        dispatch({ type: SET_NOTE, payload: doc });\n      } else {\n        // No note found create one with the passed in id\n        const doc = await insertNote(props.id);\n        dispatch({ type: NEW_NOTE, payload: doc });\n      }\n    } else {\n      // No id create note with db generated id\n      const doc = await insertNote();\n      dispatch({ type: NEW_NOTE, payload: doc });\n    }\n  }, [props.id]);\n\n  // On init\n  useEffect(() => {\n    void initialiseNote();\n  }, [initialiseNote]);\n\n  const handleOnChange = useCallback((params) => {\n    dispatch({\n      type: SET_NOTE_STATE,\n      payload: params.state.toJSON(),\n    });\n  }, []);\n\n  const handleBlur = useCallback(\n    (params, e) => {\n      note.text = ctxRef.current.getState().doc.textContent;\n      void updateNote(note);\n      setFocused(false);\n    },\n    [note]\n  );\n\n  if (!note) return null;\n\n  return (\n    <>\n      <div className=\"w-full md:w-5/12 lg:w-1/3 shadow-lg rounded-lg p-5 lg:mr-4 mb-4\">\n        <div className=\"flex justify-between\">\n          <textarea\n            placeholder=\"Title\"\n            defaultValue={note?.title}\n            className=\"font-medium text-3xl w-11/12\"\n            onChange={(e) => {\n              let title = e.target.value;\n              title.replace(/\\n/, \"\");\n              note.title = title;\n              updateNote(note);\n            }}\n            wrap=\"soft\"\n          />\n          <div className=\"flex space-x-2\">\n            <button\n              className=\"h-4 w-4 rounded-full bg-green-300 hover:bg-green-500\"\n              onClick={() => setNoteOptionsOpen(true)}\n            />\n            <button\n              className=\"h-4 w-4 rounded-full bg-red-300 hover:bg-red-500\"\n              onClick={() =>\n                reduxDispatch({\n                  type: REMOVE_ITEM_FROM_CANVAS,\n                  payload: note,\n                })\n              }\n            />\n          </div>\n        </div>\n        <Editor\n          state={note.state}\n          onChange={handleOnChange}\n          onBlur={handleBlur}\n          onFocus={() => setFocused(true)}\n          ref={ctxRef}\n        />\n      </div>\n      <NoteOptionsModal\n        isOpen={noteOptionsOpen}\n        note={note}\n        onRequestClose={() => {\n          setNoteOptionsOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default EditorContainer;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\n\ninterface NoteListProps {\n  handleNoteButtonClick(note: INote): any;\n}\n\nconst NoteList = (props: NoteListProps) => {\n  const [allNotes, setAllNotes] = useState([]);\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = await getNotes();\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n  }, [fetchAllNotes]);\n\n  return (\n    <div className=\"flex w-64 flex-col rounded items-center divide-y divide-gray-200 divide-opacity-50\">\n      {allNotes.map((note, idx) => {\n        const noteText = note?.state?.doc ? note.text : \"\";\n\n        return (\n          <button\n            className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n            key={idx}\n            onClick={() => {\n              props.handleNoteButtonClick(note);\n            }}\n          >\n            {note.title || noteText}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React, { useCallback, useState } from \"react\";\nimport { DndProvider, useDrop, XYCoord } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Card from \"components/card/card\";\nimport { ItemTypes, ICanvasCard, INote, ICanvas } from \"model/interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditorContainer from \"components/editor-container/editor-container\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS, UPDATE_ITEM } from \"store\";\nimport \"./canvas.css\";\nimport NoteList from \"components/note-list/note-list\";\n\nfunction CanvasContainer() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Canvas />\n    </DndProvider>\n  );\n}\n\nexport default CanvasContainer;\n\nconst Canvas = (props) => {\n  const debug = false;\n  const [mousePos, setMousePos] = useState<XYCoord>({ x: 0, y: 0 });\n  const [noteListPos, setNoteListPos] = useState<XYCoord>({ x: 0, y: 0 });\n\n  const cards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n  const dispatch = useDispatch();\n\n  const [, drop] = useDrop({\n    accept: [ItemTypes.CARD, ItemTypes.COLLECTION],\n    drop: (item: ICanvasCard, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.x + delta.x);\n      const y = Math.round(item.y + delta.y);\n      item.type === ItemTypes.CARD\n        ? moveCardPosition(item.id, x, y)\n        : setNoteListPos({ x, y });\n\n      return { x, y };\n    },\n  });\n\n  const createCard = useCallback(\n    (x: number, y: number) => {\n      const newCard: ICanvasCard = {\n        type: ItemTypes.CARD,\n        id: uuidv4(),\n        x: x,\n        y: y,\n      };\n      dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n    },\n    [dispatch]\n  );\n\n  const moveCardPosition = useCallback(\n    (id: string, x: number, y: number) => {\n      dispatch({ type: UPDATE_ITEM, payload: { id: id, x: x, y: y } });\n    },\n    [dispatch]\n  );\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div\n      className=\"canvas\"\n      ref={drop}\n      onMouseMove={(e) => {\n        setMousePos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      }}\n      onDoubleClick={(e) => {\n        createCard(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      }}\n    >\n      {debug && (\n        <span style={{ color: \"white\" }}>\n          x: {mousePos.x},y: {mousePos.y}\n        </span>\n      )}\n\n      <Card\n        item={{\n          type: ItemTypes.COLLECTION,\n          id: uuidv4(),\n          x: noteListPos.x,\n          y: noteListPos.y,\n        }}\n      >\n        <NoteList handleNoteButtonClick={addNoteToCanvas} />\n      </Card>\n\n      {Object.entries(cards).map(([key, card], index) => (\n        <Card key={index} item={card} hideSourceOnDrag>\n          <EditorContainer id={card.id} />\n        </Card>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { VscSearch } from \"react-icons/vsc\";\nimport { search } from \"db/pouch/notes\";\nimport \"./searchbar.css\";\nimport { ICanvasCard, INote, ItemTypes, SearchResult } from \"model/interfaces\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\n\nexport default function SearchBar() {\n  const [focused, setFocused] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchResult>();\n\n  const Search = (query: string) => {\n    search(query).then((res) => setResults(res));\n  };\n\n  const dispatch = useDispatch();\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div className=\"relative\">\n      <div className=\"h-14 w-80 border border-black rounded-full flex justify-between pl-6 items-center relative\">\n        <input\n          placeholder=\"Search\"\n          className=\"w-3/4 h-full bg-transparent overflow-ellipsis\"\n          type=\"text\"\n          value={query}\n          onChange={(e) => {\n            const { value } = e.target;\n            setQuery(value);\n            Search(value);\n          }}\n          onFocus={(e) => setFocused(true)}\n          onBlur={(e) => setFocused(false)}\n        />\n        <button className=\"h-14 w-14 rounded-full bg-black text-white flex justify-center items-center\">\n          <VscSearch />\n        </button>\n      </div>\n\n      {query !== \"\" && results?.total_rows > 0 && (\n        <div className=\"search-results border border-black border-t-0 rounded-b-lg overflow-hidden\">\n          {results?.rows?.map((val, idx) => {\n            return (\n              <button\n                key={idx}\n                className=\"result\"\n                onClick={(_) => {\n                  addNoteToCanvas(val.doc);\n                  setQuery(\"\");\n                }}\n              >\n                {val.doc.title ?? val.doc.title}\n              </button>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Canvas from \"components/canvas/canvas\";\nimport SearchBar from \"components/searchbar/searchbar\";\n\nexport default function CanvasWorkspace() {\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <Canvas />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { ItemTypes, ICanvasCard, INote, ICanvas } from \"model/interfaces\";\nimport { VscAdd } from \"react-icons/vsc\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\n\nexport default function AddNoteFAB(props) {\n  const dispatch = useDispatch();\n\n  const createCard = useCallback(() => {\n    const newCard: ICanvasCard = {\n      type: ItemTypes.CARD,\n      id: uuidv4(),\n      x: 0,\n      y: 0,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n  }, [dispatch]);\n\n  return (\n    <button\n      onClick={() => {\n        createCard();\n        props?.handleClick?.();\n      }}\n      className=\"rounded-full h-16 w-16 fixed right-8 bottom-8 bg-black text-white flex justify-center items-center shadow-md hover:pointer\"\n    >\n      <VscAdd />\n    </button>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport SearchBar from \"components/searchbar/searchbar\";\nimport { useSelector } from \"react-redux\";\nimport { ICanvas, ICanvasCard } from \"model/interfaces\";\nimport EditorContainer from \"components/editor-container/editor-container\";\nimport AddNoteFAB from \"components/add-note-fab/add-note-fab\";\nimport \"./panel-workspace.css\";\nimport { useNavigate } from \"@reach/router\";\n\nexport default function PanelWorkspace() {\n  const cards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (cards.length == 0) {\n      navigate(\"/experiment-501.V2\");\n    }\n  }, [cards, navigate]);\n\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"hidden md:flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <div className=\"editor-list\">\n        {cards.map((card, idx) => (\n          <EditorContainer key={idx} id={card.id} />\n        ))}\n      </div>\n\n      <AddNoteFAB />\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ICanvas, ICanvasCard, INote, ItemTypes } from \"model/interfaces\";\nimport { useNavigate } from \"@reach/router\";\nimport AddNoteFAB from \"components/add-note-fab/add-note-fab\";\nimport { VscKebabVertical } from \"react-icons/vsc\";\nimport NoteOptionsModal from \"components/note-options-modal/note-options-modal\";\nimport \"./library.css\";\n\nexport default function Library() {\n  const [allNotes, setAllNotes] = useState<INote[]>([]);\n  const [noteOptionsOpen, setNoteOptionsOpen] = useState<boolean>(false);\n  const [selectedNote, setSelectedNote] = useState<INote>();\n\n  const navigate = useNavigate();\n\n  const openCanvasCards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n\n  const dispatch = useDispatch();\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = (await getNotes()) as any;\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  const openNoteOptions = (note: INote) => {\n    setSelectedNote(note);\n    setNoteOptionsOpen(true);\n  };\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n\n    return () => {\n      setAllNotes([]);\n    };\n  }, [fetchAllNotes]);\n\n  return (\n    <>\n      <div className=\"min-h-screen max-w-full\">\n        <div className=\"p-5\">\n          <table className=\"rounded-lg divide-y divide-gray-200 note-list shadow-md\">\n            <thead>\n              <tr>\n                <th className=\"w-11/12 lg:w-9/12\">Note</th>\n                <th className=\"hidden lg:block w-2/12\">Edited</th>\n                <th className=\"w-1/12\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {allNotes\n                .sort((a, b) => (a.lastEditedTime < b.lastEditedTime ? 1 : -1)) // Sort by last edited date descending\n                .map((note, idx) => {\n                  const noteText = note?.state?.doc ? note.text : \"\";\n\n                  return (\n                    <tr key={idx} id={`row-${note.id}`}>\n                      <td>\n                        <button\n                          className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n                          onClick={() => {\n                            addNoteToCanvas(note);\n                            navigate(\"/experiment-501.V2/p\");\n                          }}\n                        >\n                          <div className=\"flex flex-col text-left\">\n                            <div className=\"font-medium flex space-x-1\">\n                              <span>{note.title || \"No Title\"}</span>\n                              <span\n                                className={`rounded-full h-2 w-2 bg-green-500 ${\n                                  openCanvasCards.find((el) => el.id == note.id)\n                                    ? \"inline\"\n                                    : \"hidden\"\n                                } `}\n                              ></span>\n                            </div>\n                            <span className=\"text-sm text-gray-500 font-light\">\n                              {note.text || \"empty\"}\n                            </span>\n                          </div>\n                        </button>\n                      </td>\n                      <td className=\"hidden md:block\">\n                        {new Date(note.lastEditedTime).toLocaleString()}\n                      </td>\n                      <td>\n                        <button onClick={() => openNoteOptions(note)}>\n                          <VscKebabVertical />\n                        </button>\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n\n          <AddNoteFAB handleClick={() => navigate(\"/experiment-501.V2/p\")} />\n        </div>\n      </div>\n\n      <NoteOptionsModal\n        isOpen={noteOptionsOpen}\n        note={selectedNote}\n        onRequestClose={() => {\n          setSelectedNote(null);\n          setNoteOptionsOpen(false);\n        }}\n      />\n    </>\n  );\n}\n","import Peer from \"peerjs\";\nimport { getNotes, updateNote } from \"db/pouch/notes\";\n\nclass Replicator {\n  id: string;\n  peer: Peer;\n  dataConnection: Peer.DataConnection;\n\n  constructor() {\n    this.id = localStorage.getItem(\"peerId\");\n    this.peer = new Peer(this.id);\n\n    this.peer.on(\"open\", function (id) {\n      localStorage.setItem(\"peerId\", id);\n      console.log(\"My peer ID is: \" + id);\n    });\n\n    this.peer.on(\"connection\", (dataConnection) => {\n      console.log(`Connected to ${dataConnection.peer}`);\n      this.dataConnection = dataConnection;\n      dataConnection.on(\"data\", (data) => {\n        console.log(`Recieved data from ${this.dataConnection.peer}`);\n        console.log(data);\n        if (Array.isArray(data)) {\n          data.forEach((item) => updateNote(item));\n        }\n      });\n    });\n\n    this.peer.on(\"error\", (error) => {\n      console.error(error);\n    });\n  }\n\n  Connect(peerId: string) {\n    this.dataConnection = this.peer.connect(peerId, { serialization: \"json\" });\n    console.log(`Connected to ${this.dataConnection.peer}`);\n  }\n\n  async Replicate() {\n    try {\n      let dataToSend = await getNotes();\n      this.dataConnection.send(dataToSend);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n}\n\nexport default Replicator;\n","import React, { useEffect, useState } from \"react\";\nimport SearchBar from \"components/searchbar/searchbar\";\nimport Replicator from \"replication/webrtc\";\nimport QRCode from \"qrcode\";\nimport jsQR from \"jsqr\";\n\nexport default function Demo() {\n  const [peerId, setPeerId] = useState<string>(\"\");\n  const [dataToSend, setDataToSend] = useState<string>();\n  const [replicator, setReplicator] = useState<Replicator>();\n  let qrcode;\n  let video;\n  let canvasElement: HTMLCanvasElement;\n\n  useEffect(() => {\n    setReplicator(new Replicator());\n    // Generate QR Code\n    let canvas = document.getElementById(\"qrcode\");\n    QRCode.toCanvas(canvas, localStorage.getItem(\"peerId\"));\n\n    // Read QR Code\n    canvasElement = document.getElementById(\n      \"outputCanvas\"\n    ) as HTMLCanvasElement;\n\n    video = document.getElementById(\"video\");\n\n    navigator.mediaDevices\n      .getUserMedia({ video: { facingMode: \"environment\" } })\n      .then(function (stream) {\n        video.srcObject = stream;\n        video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n        video.play();\n      });\n  }, []);\n\n  let tick = () => {\n    if (video && video.readyState === video.HAVE_ENOUGH_DATA) {\n      let canvasCtx = canvasElement.getContext(\"2d\");\n\n      canvasElement.height = video.videoHeight;\n      canvasElement.width = video.videoWidth;\n      canvasCtx.drawImage(\n        video,\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n      var imageData = canvasCtx.getImageData(\n        0,\n        0,\n        canvasElement.width,\n        canvasElement.height\n      );\n      var code = jsQR(imageData.data, imageData.width, imageData.height, {\n        inversionAttempts: \"dontInvert\",\n      });\n\n      if (code) {\n        console.log(\"Got QR Code\");\n        console.log(code.data);\n        setPeerId(code.data);\n      }\n    }\n    requestAnimationFrame(tick);\n  };\n\n  requestAnimationFrame(tick);\n\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <div className=\"flex\">\n        <div className=\"flex flex-col\">\n          <input\n            className=\"border border-black\"\n            type=\"text\"\n            value={peerId}\n            onChange={(e) => {\n              setPeerId(e.target.value);\n            }}\n          />\n          <button\n            className=\"rounded bg-blue-500 text-white\"\n            onClick={(e) => {\n              replicator.Connect(peerId);\n            }}\n          >\n            Connect\n          </button>\n        </div>\n        <div className=\"flex flex-col\">\n          <textarea\n            className=\"border border-black\"\n            onChange={(e) => {\n              setDataToSend(e.target.value);\n            }}\n          ></textarea>\n          <button\n            className=\"bg-green-500 text-white rounded\"\n            onClick={(e) => {\n              replicator.Replicate();\n            }}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n\n      <canvas id=\"qrcode\"></canvas>\n      <canvas id=\"outputCanvas\" hidden></canvas>\n      <video id=\"video\"></video>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport FadeInTransitionRouter from \"./FadeInTransitionRouter\";\nimport NestedRoute from \"./NestedRoute\";\nimport CanvasWorkspace from \"pages/canvas-workspace\";\nimport PanelWorkspace from \"pages/panel-workspace/panel-workspace\";\nimport Library from \"pages/library/library\";\nimport Demo from \"pages/demo\";\n\nexport default function Routes(props) {\n  return (\n    <FadeInTransitionRouter>\n      <Redirect from=\"/\" to=\"experiment-501.V2\" noThrow />\n      <NestedRoute path=\"/experiment-501.V2\">\n        <CanvasWorkspace path=\"/c\" />\n        <PanelWorkspace path=\"/p\" />\n        <Demo path=\"/demo\" />\n        <Library path=\"/\" />\n      </NestedRoute>\n    </FadeInTransitionRouter>\n  );\n}\n","import React from \"react\";\nimport Routes from \"router/Routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}