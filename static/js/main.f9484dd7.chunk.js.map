{"version":3,"sources":["router/FadeInTransitionRouter/index.tsx","router/NestedRoute.tsx","components/card/card.tsx","model/interfaces.ts","components/remirror-editor/extensions/link-extension/link-extention.ts","components/remirror-editor/extensions/image-extension/image-extension.ts","components/remirror-editor/remirror-editor.tsx","db/pouch/notes.ts","store/index.ts","components/editor-container/editor-container.tsx","components/note-list/note-list.tsx","components/canvas/canvas.tsx","components/searchbar/searchbar.tsx","pages/canvas-workspace.tsx","components/add-note-fab/add-note-fab.tsx","pages/panel-workspace/panel-workspace.tsx","pages/library.tsx","pages/demo.tsx","router/Routes.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FadeInTransitionRouter","props","location","TransitionGroup","className","CSSTransition","classNames","timeout","children","key","NestedRoute","Card","useDrag","item","collect","monitor","isDragging","drag","preview","id","ref","style","display","hideSourceOnDrag","opacity","top","y","left","x","ItemTypes","LinkExtension","args","addHandler","_","data","window","open","href","regex","compile","markInputRule","regexp","this","createRegex","type","getAttributes","matches","text","RemirrorLinkExtension","ImageExtension","nodeInputRule","alt","src","RemirrorImageExtension","Editor","forwardRef","handleOnError","useCallback","json","invalidContent","transformers","remove","useRemirror","extensions","BoldExtension","ItalicExtension","BlockquoteExtension","defaultTarget","autoLink","HeadingExtension","BulletListExtension","OrderedListExtension","TaskListExtension","enableResizing","CodeExtension","onError","content","state","doc","manager","setState","getContext","useImperativeHandle","initialContent","onChange","params","onFocus","event","onBlur","PouchDB","plugin","Upsert","QuickSearch","db","search","fields","build","then","console","log","catch","err","defaultState","updateNote","inputDocument","a","docId","upsert","response","insertNote","title","meta","createdTime","lastEditedTime","newDocument","_id","uuidv4","Date","now","putIfNotExists","storedDocument","getNotes","allDocs","include_docs","result","rows","map","row","getNoteById","get","callback","changes","since","live","on","query","res","ADD_ITEM_TO_CANVAS","REMOVE_ITEM_FROM_CANVAS","UPDATE_ITEM","openCanvas","items","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","payload","find","update","$push","filter","oldItem","itemIdx","indexOf","$merge","SET_NOTE","SET_NOTE_STATE","NEW_NOTE","reducer","note","currentTime","EditorContainer","useReducer","dispatch","reduxDispatch","useDispatch","useState","setFocused","ctxRef","useRef","initialiseNote","useEffect","handleOnChange","toJSON","handleBlur","e","current","getState","textContent","placeholder","defaultValue","target","value","replace","wrap","onClick","NoteList","allNotes","setAllNotes","fetchAllNotes","idx","noteText","handleNoteButtonClick","CanvasContainer","DndProvider","backend","HTML5Backend","Canvas","setMousePos","noteListPos","setNoteListPos","cards","useSelector","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","moveCardPosition","createCard","newCard","onMouseMove","nativeEvent","offsetX","offsetY","onDoubleClick","Object","entries","index","card","SearchBar","setQuery","results","setResults","Search","total_rows","val","addNoteToCanvas","CanvasWorkspace","AddNoteFAB","handleClick","PanelWorkspace","Library","navigate","useNavigate","Demo","Routes","from","to","noThrow","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9484dd7.chunk.js","sourcesContent":["import { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { Router, Location } from \"@reach/router\";\nimport \"./style.css\";\n\nconst FadeInTransitionRouter = (props) => {\n  return (\n    <Location>\n      {({ location }) => (\n        <TransitionGroup className=\"transition-group\">\n          <CSSTransition key={location.key} classNames=\"fade\" timeout={500}>\n            <Router location={location}>{props.children}</Router>\n          </CSSTransition>\n        </TransitionGroup>\n      )}\n    </Location>\n  );\n};\n\nexport default FadeInTransitionRouter;\n","const NestedRoute = ({ children }) => {\n  return children;\n};\n\nexport default NestedRoute;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ICanvasCard } from \"model/interfaces\";\nimport \"./card.css\";\n\ndeclare interface CardProps {\n  item: ICanvasCard;\n  onRemove?;\n  hideSourceOnDrag?: boolean;\n  children?: any;\n}\n\nconst Card = (props: CardProps) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: props.item,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      id={props.item.id}\n      ref={preview}\n      className=\"card\"\n      style={{\n        display: isDragging && props.hideSourceOnDrag ? \"none\" : \"flex\",\n        opacity: isDragging ? 0.5 : 1,\n        top: props.item.y,\n        left: props.item.x,\n      }}\n    >\n      <div className=\"flex justify-end p-3\">\n        <div\n          ref={drag}\n          id={`${props.item.id}-drag-handle`}\n          className=\"card-drag-handle\"\n        ></div>\n      </div>\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const ItemTypes = {\n  CARD: \"card\",\n  COLLECTION: \"collection\",\n};\n\nexport interface ICanvasCard {\n  type: string;\n  id: string;\n  // The x,y co-ords of the element\n  x: number;\n  y: number;\n}\n\nexport interface ICanvas {\n  id: string;\n  title: string;\n  items: ICanvasCard[];\n}\n\nexport interface INote {\n  id: string;\n  title: string;\n  createdTime: number;\n  lastEditedTime: number;\n  meta: object;\n  state: PMState;\n  text: string;\n}\n\n// JSON serialised prosemirror state returned by state.toJSON()\nexport interface PMState {\n  doc: any;\n  selection: object;\n}\n\nexport interface SearchResult {\n  rows: SearchResultRow[];\n  total_rows: number;\n}\n\nexport interface SearchResultRow {\n  id: string;\n  score: number;\n  doc: INote;\n}\n","import { InputRule } from \"@remirror/pm\";\nimport { LinkExtension as RemirrorLinkExtension } from \"remirror/extensions\";\nimport { markInputRule } from \"@remirror/core-utils\";\nimport { MarkPasteRule } from \"@remirror/pm/paste-rules\";\n\nclass LinkExtension extends RemirrorLinkExtension {\n  constructor(args) {\n    super(args);\n    this.addHandler(\"onClick\", (_, data) => {\n      window.open(data.href);\n      return true;\n    });\n  }\n\n  createRegex(): RegExp {\n    try {\n      // regex with look behind\n      let regex = /(?<!!)\\[(.*?)\\]\\((.*?)\\)/;\n      regex.compile();\n      return regex;\n    } catch {\n      // If browser (Ahem Safari) doesnt support look behind fall back to this regex\n      return /[^!]\\[(.+?)\\]\\((.+?)\\)/;\n    }\n  }\n\n  createInputRules(): InputRule[] {\n    return [\n      markInputRule({\n        regexp: this.createRegex(),\n        type: this.type,\n        getAttributes: (matches: string[]) => {\n          const [_, text, href] = matches;\n          return { text: text, href: href };\n        },\n      }),\n    ];\n  }\n\n  // Overwrite the paste rule\n  createPasteRules(): MarkPasteRule[] {\n    return [];\n  }\n}\n\nexport default LinkExtension;\n","import { ImageExtension as RemirrorImageExtension } from \"remirror/extensions\";\nimport { InputRule } from \"@remirror/pm\";\nimport { nodeInputRule } from \"@remirror/core-utils\";\n\nclass ImageExtension extends RemirrorImageExtension {\n  createInputRules(): InputRule[] {\n    return [\n      nodeInputRule({\n        regexp: /!\\[(.+?)\\]\\((.+?)\\)/,\n        type: this.type,\n        getAttributes: (matches: string[]) => {\n          const [_, alt, src] = matches;\n          return { src: src, alt: alt };\n        },\n      }),\n    ];\n  }\n}\n\nexport default ImageExtension;\n","import \"remirror/styles/all.css\";\nimport \"./remirror-editor.css\";\nimport React, { forwardRef, useCallback, useImperativeHandle } from \"react\";\nimport {\n  BoldExtension,\n  BlockquoteExtension,\n  CodeExtension,\n  HeadingExtension,\n  ItalicExtension,\n  BulletListExtension,\n  OrderedListExtension,\n  TaskListExtension,\n} from \"remirror/extensions\";\nimport {\n  EditorComponent,\n  ReactFrameworkOutput,\n  Remirror,\n  useRemirror,\n} from \"@remirror/react\";\nimport {\n  Extension,\n  InvalidContentHandler,\n  RemirrorEventListener,\n  RemirrorEventListenerProps,\n} from \"@remirror/core\";\nimport { PMState } from \"model/interfaces\";\nimport {\n  LinkExtension,\n  ImageExtension,\n} from \"components/remirror-editor/extensions\";\n\ninterface EditorProps {\n  onFocus?: (\n    params: RemirrorEventListenerProps<Extension>,\n    event: Event\n  ) => void;\n  onBlur?: (\n    params: RemirrorEventListenerProps<Extension>,\n    event: Event\n  ) => void;\n  onChange?: RemirrorEventListener<Extension>;\n  state?: PMState;\n}\n\nconst Editor = forwardRef<ReactFrameworkOutput<Extension>, EditorProps>(\n  (props: EditorProps, ref) => {\n    const handleOnError: InvalidContentHandler = useCallback(\n      ({ json, invalidContent, transformers }) => {\n        // Automatically remove all invalid nodes and marks.\n        return transformers.remove(json, invalidContent);\n      },\n      []\n    );\n\n    const { manager, state, setState, getContext } = useRemirror({\n      extensions: () => [\n        new BoldExtension({}),\n        new ItalicExtension(),\n        new BlockquoteExtension(),\n        new LinkExtension({ defaultTarget: \"_blank\", autoLink: true }),\n        new HeadingExtension({}),\n        new BulletListExtension({}),\n        new OrderedListExtension(),\n        new TaskListExtension(),\n        new ImageExtension({ enableResizing: true }),\n        new CodeExtension(),\n      ],\n      onError: handleOnError,\n      content: props.state?.doc,\n    });\n\n    useImperativeHandle(ref, () => getContext() as any, [getContext]);\n\n    return (\n      <div className=\"remirror-theme\">\n        <Remirror\n          manager={manager}\n          initialContent={state}\n          onChange={(params) => {\n            setState(params.state);\n            props.onChange?.(params);\n          }}\n          onFocus={(params, event) => {\n            props.onFocus?.(params, event);\n          }}\n          onBlur={(params, event) => {\n            props.onBlur?.(params, event);\n          }}\n        >\n          <EditorComponent />\n        </Remirror>\n      </div>\n    );\n  }\n);\n\nexport default Editor;\n","import PouchDB from \"pouchdb\";\nimport Upsert from \"pouchdb-upsert\";\nimport { INote, PMState, SearchResult } from \"model/interfaces\";\nimport QuickSearch from \"pouchdb-quick-search\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { schema } from \"components/editor/schema\";\n\nPouchDB.plugin(Upsert);\nPouchDB.plugin(QuickSearch);\n\nlet db = new PouchDB(\"notes\");\n\n(db as any)\n  .search({ fields: [\"title\", \"text\"], build: true })\n  .then(() => console.log(\"Index created succesfully\"))\n  .catch((err) => console.log(\"ERROR failed to build index\"));\n\nexport const defaultState = { type: \"doc\", content: [{ type: \"paragraph\" }] };\n\nexport async function updateNote(inputDocument: INote) {\n  try {\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const response = await db.upsert(docId, (doc) => {\n      return inputDocument as Partial<PouchDB.Core.IdMeta>;\n    });\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't update \\n${error}`);\n  }\n}\n\n// Create a new note\nexport async function insertNote(\n  id?: string,\n  title?: string,\n  meta?: object,\n  state?: PMState,\n  createdTime?: string,\n  lastEditedTime?: string\n) {\n  try {\n    let newDocument = {\n      _id: id || uuidv4(),\n      title: title || null,\n      meta: meta || {},\n      state: state || defaultState,\n      createdTime: createdTime || Date.now(),\n      lastEditedTime: lastEditedTime || Date.now(),\n    };\n\n    const storedDocument = await db.putIfNotExists(newDocument);\n    return storedDocument;\n  } catch (error) {\n    console.log(`ERROR: couldn't create doc ${error}`);\n  }\n}\n\nexport async function deleteNote(inputDocument: INote) {\n  try {\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const response = await db.remove(docId);\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't delete \\n${error}`);\n  }\n}\n\nexport async function getNotes(): Promise<\n  PouchDB.Core.ExistingDocument<PouchDB.Core.AllDocsMeta>[]\n> {\n  try {\n    let result = await db.allDocs({ include_docs: true });\n    return result?.rows?.map((row) => row.doc);\n  } catch (error) {\n    console.log(`ERROR fetching all notes \\n${error}`);\n  }\n}\n\nexport async function getNoteById(id: string) {\n  try {\n    const doc = await db.get(id);\n    return doc;\n  } catch (error) {\n    console.log(`ERROR fetching  ${id} \\n${error}`);\n  }\n}\n\nexport function onChange(callback) {\n  db.changes({\n    since: \"now\",\n    live: true,\n  }).on(\"change\", () => callback());\n}\n\nexport async function search(\n  query: string,\n  fields = [\"title\", \"text\"]\n): Promise<SearchResult> {\n  return (db as any)\n    ?.search({ query: query, fields: fields, include_docs: true })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(`Search failed ${err}`));\n}\n","import { createStore, compose } from \"redux\";\nimport { ICanvas } from \"model/interfaces\";\nimport update from \"immutability-helper\";\n\nexport const ADD_ITEM_TO_CANVAS = \"ADD_ITEM_TO_CANVAS\";\nexport const REMOVE_ITEM_FROM_CANVAS = \"REMOVE_ITEM_FROM_CANVAS\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM_POSITION\";\n\nconst openCanvas: ICanvas = {\n  id: \"randomID\",\n  title: \"Main Canvas\",\n  items: [],\n};\n\nconst reducer = function (\n  state = { openCanvas: openCanvas },\n  { type, payload }\n) {\n  switch (type) {\n    case ADD_ITEM_TO_CANVAS:\n      const { items } = state.openCanvas;\n      if (!items.find((item) => item.id === payload?.id)) {\n        state.openCanvas.items = update(items, { $push: [payload] });\n        return state;\n      }\n      return state;\n    case REMOVE_ITEM_FROM_CANVAS:\n      state.openCanvas.items = state.openCanvas.items.filter(\n        (item) => item.id !== payload?.id\n      );\n      return state;\n    case UPDATE_ITEM:\n      const oldItem = state.openCanvas.items.find(\n        (item) => item.id === payload?.id\n      );\n\n      if (!oldItem) {\n        return state;\n      }\n\n      const itemIdx = state.openCanvas.items.indexOf(oldItem);\n      state.openCanvas.items = update(state.openCanvas.items, {\n        [itemIdx]: { $merge: { ...payload } },\n      });\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ || compose;\nlet store = createStore(reducer, composeEnhancers());\n\nexport default store;\n","/* Manage the editor's interaction with the db & global state */\nimport React, { useCallback, useEffect, useReducer, useRef } from \"react\";\nimport Editor from \"components/remirror-editor/remirror-editor\";\nimport { insertNote, updateNote, getNoteById } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\nimport { useDispatch } from \"react-redux\";\nimport { REMOVE_ITEM_FROM_CANVAS } from \"store\";\nimport { useState } from \"react\";\nimport { ReactFrameworkOutput } from \"@remirror/react\";\nimport { Extension } from \"@remirror/core\";\ninterface EditorContainerProps {\n  id?: string;\n  note?: INote;\n}\n\nconst SET_NOTE = \"SET_NOTE\";\nconst SET_NOTE_STATE = \"SET_NOTE_STATE\";\nconst NEW_NOTE = \"NEW_NOTE\";\n\nconst reducer = (note: INote, { type, payload }) => {\n  switch (type) {\n    case SET_NOTE:\n      return payload;\n    case NEW_NOTE:\n      let currentTime = Date.now();\n      const newNote = {\n        ...payload,\n        createdTime: currentTime,\n        lastEditedTime: currentTime,\n      };\n      return newNote;\n    case SET_NOTE_STATE:\n      const updatedNote = {\n        ...note,\n        state: payload,\n        lastEditedTime: Date.now(),\n      };\n      return updatedNote;\n  }\n};\nconst EditorContainer = (props: EditorContainerProps) => {\n  const [note, dispatch] = useReducer(reducer, props.note);\n  const reduxDispatch = useDispatch();\n  const [focused, setFocused] = useState(false);\n\n  const ctxRef = useRef<ReactFrameworkOutput<Extension>>();\n\n  const initialiseNote = useCallback(async () => {\n    if (props.id) {\n      // try fetch the note from the db\n      let doc = await getNoteById(props.id);\n      if (doc) {\n        dispatch({ type: SET_NOTE, payload: doc });\n      } else {\n        // No note found create one with the passed in id\n        const doc = await insertNote(props.id);\n        dispatch({ type: NEW_NOTE, payload: doc });\n      }\n    } else {\n      // No id create note with db generated id\n      const doc = await insertNote();\n      dispatch({ type: NEW_NOTE, payload: doc });\n    }\n  }, [props.id]);\n\n  // On init\n  useEffect(() => {\n    void initialiseNote();\n  }, [initialiseNote]);\n\n  const handleOnChange = useCallback((params) => {\n    dispatch({\n      type: SET_NOTE_STATE,\n      payload: params.state.toJSON(),\n    });\n  }, []);\n\n  const handleBlur = useCallback(\n    (params, e) => {\n      note.text = ctxRef.current.getState().doc.textContent;\n      void updateNote(note);\n      setFocused(false);\n    },\n    [note]\n  );\n\n  if (!note) return null;\n\n  return (\n    <div className=\"w-full md:w-5/12 lg:w-1/3 shadow-lg rounded-lg p-5 lg:mr-4 mb-4\">\n      <div className=\"flex justify-between\">\n        <textarea\n          placeholder=\"Title\"\n          defaultValue={note?.title}\n          className=\"font-medium text-3xl w-11/12\"\n          onChange={(e) => {\n            let title = e.target.value;\n            title.replace(/\\n/, \"\");\n            note.title = title;\n            updateNote(note);\n          }}\n          wrap=\"soft\"\n        />\n        <button\n          className=\"h-4 w-4 rounded-full bg-red-300 hover:bg-red-500\"\n          onClick={() =>\n            reduxDispatch({\n              type: REMOVE_ITEM_FROM_CANVAS,\n              payload: note,\n            })\n          }\n        />\n      </div>\n      <Editor\n        state={note.state}\n        onChange={handleOnChange}\n        onBlur={handleBlur}\n        onFocus={() => setFocused(true)}\n        ref={ctxRef}\n      />\n    </div>\n  );\n};\n\nexport default EditorContainer;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\n\ninterface NoteListProps {\n  handleNoteButtonClick(note: INote): any;\n}\n\nconst NoteList = (props: NoteListProps) => {\n  const [allNotes, setAllNotes] = useState([]);\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = await getNotes();\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n  }, [fetchAllNotes]);\n\n  return (\n    <div className=\"flex w-64 flex-col rounded items-center divide-y divide-gray-200 divide-opacity-50\">\n      {allNotes.map((note, idx) => {\n        const noteText = note?.state?.doc ? note.text : \"\";\n\n        return (\n          <button\n            className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n            key={idx}\n            onClick={() => {\n              props.handleNoteButtonClick(note);\n            }}\n          >\n            {note.title || noteText}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React, { useCallback, useState } from \"react\";\nimport { DndProvider, useDrop, XYCoord } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Card from \"components/card/card\";\nimport { ItemTypes, ICanvasCard, INote, ICanvas } from \"model/interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditorContainer from \"components/editor-container/editor-container\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS, UPDATE_ITEM } from \"store\";\nimport \"./canvas.css\";\nimport NoteList from \"components/note-list/note-list\";\n\nfunction CanvasContainer() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Canvas />\n    </DndProvider>\n  );\n}\n\nexport default CanvasContainer;\n\nconst Canvas = (props) => {\n  const debug = false;\n  const [mousePos, setMousePos] = useState<XYCoord>({ x: 0, y: 0 });\n  const [noteListPos, setNoteListPos] = useState<XYCoord>({ x: 0, y: 0 });\n\n  const cards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n  const dispatch = useDispatch();\n\n  const [, drop] = useDrop({\n    accept: [ItemTypes.CARD, ItemTypes.COLLECTION],\n    drop: (item: ICanvasCard, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.x + delta.x);\n      const y = Math.round(item.y + delta.y);\n      item.type === ItemTypes.CARD\n        ? moveCardPosition(item.id, x, y)\n        : setNoteListPos({ x, y });\n\n      return { x, y };\n    },\n  });\n\n  const createCard = useCallback(\n    (x: number, y: number) => {\n      const newCard: ICanvasCard = {\n        type: ItemTypes.CARD,\n        id: uuidv4(),\n        x: x,\n        y: y,\n      };\n      dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n    },\n    [dispatch]\n  );\n\n  const moveCardPosition = useCallback(\n    (id: string, x: number, y: number) => {\n      dispatch({ type: UPDATE_ITEM, payload: { id: id, x: x, y: y } });\n    },\n    [dispatch]\n  );\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div\n      className=\"canvas\"\n      ref={drop}\n      onMouseMove={(e) => {\n        setMousePos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      }}\n      onDoubleClick={(e) => {\n        createCard(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      }}\n    >\n      {debug && (\n        <span style={{ color: \"white\" }}>\n          x: {mousePos.x},y: {mousePos.y}\n        </span>\n      )}\n\n      <Card\n        item={{\n          type: ItemTypes.COLLECTION,\n          id: uuidv4(),\n          x: noteListPos.x,\n          y: noteListPos.y,\n        }}\n      >\n        <NoteList handleNoteButtonClick={addNoteToCanvas} />\n      </Card>\n\n      {Object.entries(cards).map(([key, card], index) => (\n        <Card key={index} item={card} hideSourceOnDrag>\n          <EditorContainer id={card.id} />\n        </Card>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { VscSearch } from \"react-icons/vsc\";\nimport { search } from \"db/pouch/notes\";\nimport \"./searchbar.css\";\nimport { ICanvasCard, INote, ItemTypes, SearchResult } from \"model/interfaces\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\n\nexport default function SearchBar() {\n  const [focused, setFocused] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchResult>();\n\n  const Search = (query: string) => {\n    search(query).then((res) => setResults(res));\n  };\n\n  const dispatch = useDispatch();\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div className=\"relative\">\n      <div className=\"h-14 w-80 border border-black rounded-full flex justify-between pl-6 items-center relative\">\n        <input\n          placeholder=\"Search\"\n          className=\"w-3/4 h-full bg-transparent overflow-ellipsis\"\n          type=\"text\"\n          value={query}\n          onChange={(e) => {\n            const { value } = e.target;\n            setQuery(value);\n            Search(value);\n          }}\n          onFocus={(e) => setFocused(true)}\n          onBlur={(e) => setFocused(false)}\n        />\n        <button className=\"h-14 w-14 rounded-full bg-black text-white flex justify-center items-center\">\n          <VscSearch />\n        </button>\n      </div>\n\n      {query !== \"\" && results?.total_rows > 0 && (\n        <div className=\"search-results border border-black border-t-0 rounded-b-lg overflow-hidden\">\n          {results?.rows?.map((val, idx) => {\n            return (\n              <button\n                key={idx}\n                className=\"result\"\n                onClick={(_) => {\n                  addNoteToCanvas(val.doc);\n                  setQuery(\"\");\n                }}\n              >\n                {val.doc.title ?? val.doc.title}\n              </button>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Canvas from \"components/canvas/canvas\";\nimport SearchBar from \"components/searchbar/searchbar\";\n\nexport default function CanvasWorkspace() {\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <Canvas />\n    </div>\n  );\n}\n","import React, { useCallback } from \"react\";\nimport { ItemTypes, ICanvasCard, INote, ICanvas } from \"model/interfaces\";\nimport { VscAdd } from \"react-icons/vsc\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\n\nexport default function AddNoteFAB(props) {\n  const dispatch = useDispatch();\n\n  const createCard = useCallback(() => {\n    const newCard: ICanvasCard = {\n      type: ItemTypes.CARD,\n      id: uuidv4(),\n      x: 0,\n      y: 0,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n  }, [dispatch]);\n\n  return (\n    <button\n      onClick={() => {\n        createCard();\n        props?.handleClick?.();\n      }}\n      className=\"rounded-full h-16 w-16 fixed right-8 bottom-8 bg-black text-white flex justify-center items-center shadow-md hover:pointer\"\n    >\n      <VscAdd />\n    </button>\n  );\n}\n","import React from \"react\";\nimport SearchBar from \"components/searchbar/searchbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ICanvas, ICanvasCard, INote, ItemTypes } from \"model/interfaces\";\nimport NoteList from \"components/note-list/note-list\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\nimport EditorContainer from \"components/editor-container/editor-container\";\nimport AddNoteFAB from \"components/add-note-fab/add-note-fab\";\nimport \"./panel-workspace.css\";\n\nexport default function PanelWorkspace() {\n  const cards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n  const dispatch = useDispatch();\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"hidden md:flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      {/* <div>\n        <NoteList handleNoteButtonClick={addNoteToCanvas} />\n      </div> */}\n      <div className=\"editor-list sibling-fade\">\n        {cards.map((card, idx) => (\n          <EditorContainer key={idx} id={card.id} />\n        ))}\n      </div>\n\n      <AddNoteFAB />\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ICanvas, ICanvasCard, INote, ItemTypes } from \"model/interfaces\";\nimport { useNavigate } from \"@reach/router\";\nimport AddNoteFAB from \"components/add-note-fab/add-note-fab\";\n\nexport default function Library() {\n  const [allNotes, setAllNotes] = useState([]);\n\n  const navigate = useNavigate();\n\n  const openCanvasCards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n\n  const dispatch = useDispatch();\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = await getNotes();\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n  }, [fetchAllNotes]);\n\n  return (\n    <div className=\"min-h-screen\">\n      <div className=\"h-full w-full rounded-lg divide-y divide-gray-200\">\n        {allNotes.map((note, idx) => {\n          const noteText = note?.state?.doc ? note.text : \"\";\n\n          return (\n            <button\n              className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n              key={idx}\n              onClick={() => {\n                addNoteToCanvas(note);\n                navigate(\"/experiment-501.V2/p\");\n              }}\n            >\n              {note.title || noteText || \"Empty\"}\n            </button>\n          );\n        })}\n        <AddNoteFAB handleClick={() => navigate(\"/experiment-501.V2/p\")} />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Editor from \"components/remirror-editor/remirror-editor\";\nimport SearchBar from \"components/searchbar/searchbar\";\n\nexport default function Demo() {\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport FadeInTransitionRouter from \"./FadeInTransitionRouter\";\nimport NestedRoute from \"./NestedRoute\";\nimport CanvasWorkspace from \"pages/canvas-workspace\";\nimport PanelWorkspace from \"pages/panel-workspace/panel-workspace\";\nimport Library from \"pages/library\";\nimport Demo from \"pages/demo\";\n\nexport default function Routes(props) {\n  return (\n    <FadeInTransitionRouter>\n      <Redirect from=\"/\" to=\"experiment-501.V2\" noThrow />\n      <NestedRoute path=\"/experiment-501.V2\">\n        <CanvasWorkspace path=\"/c\" />\n        <PanelWorkspace path=\"/p\" />\n        <Demo path=\"/demo\" />\n        <Library path=\"/\" />\n      </NestedRoute>\n    </FadeInTransitionRouter>\n  );\n}\n","import React from \"react\";\nimport Routes from \"router/Routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}