{"version":3,"sources":["router/FadeInTransitionRouter/index.tsx","router/NestedRoute.tsx","components/card/card.tsx","model/interfaces.ts","components/editor/schema/index.ts","components/editor/plugins/index.ts","components/editor/editor.tsx","db/pouch/notes.ts","store/index.ts","components/editor/container.tsx","components/note-list/note-list.tsx","components/canvas/canvas.tsx","components/searchbar/searchbar.tsx","pages/canvas-workspace.tsx","pages/panel-workspace.tsx","router/Routes.jsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FadeInTransitionRouter","props","location","TransitionGroup","className","CSSTransition","classNames","timeout","children","key","NestedRoute","Card","useDrag","item","collect","monitor","isDragging","drag","preview","id","ref","style","display","hideSourceOnDrag","opacity","top","y","left","x","ItemTypes","calcYchangeDomAttrs","attrs","domAttrs","Object","assign","ychange","ychange_user","user","ychange_state","state","nodes","doc","content","paragraph","default","group","parseDOM","tag","toDOM","node","blockquote","defining","horizontal_rule","heading","level","code_block","marks","code","preserveWhitespace","text","image","inline","src","alt","title","draggable","getAttrs","dom","getAttribute","hard_break","selectable","schema","Schema","link","href","inclusive","em","strong","fontWeight","value","test","basicPlugins","exampleSetup","menuBar","ydoc","Y","provider","WebrtcProvider","type","getXmlFragment","Editor","ySyncPlugin","yCursorPlugin","awareness","yUndoPlugin","keymap","undo","redo","concat","onFocus","onBlur","onChange","editorRef","useRef","useState","editorView","setEditorView","generateEditorViewProps","useCallback","dispatchTransaction","tr","newState","this","apply","updateState","handleDOMEvents","focus","view","event","transaction","setMeta","dispatch","blur","generateEditorState","options","plugins","nodeFromJSON","selection","Selection","fromJSON","EditorState","create","useEffect","editorProps","EditorView","current","destroy","setProps","PouchDB","plugin","Upsert","QuickSearch","db","updateNote","inputDocument","a","textContent","docId","upsert","response","console","log","insertNote","meta","createdTime","lastEditedTime","newDocument","_id","uuidv4","Date","now","putIfNotExists","storedDocument","getNotes","allDocs","include_docs","result","rows","map","row","getNoteById","get","query","fields","search","then","res","catch","err","build","ADD_ITEM_TO_CANVAS","REMOVE_ITEM_FROM_CANVAS","UPDATE_ITEM","openCanvas","items","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION__","compose","store","createStore","payload","find","update","$push","filter","oldItem","itemIdx","indexOf","$merge","SET_NOTE","SET_NOTE_STATE","NEW_NOTE","reducer","note","currentTime","Container","useReducer","localNote","reduxDispatch","useDispatch","setFocused","initialiseNote","handleOnChange","toJSON","handleBlur","placeholder","e","target","onClick","_","NoteList","allNotes","setAllNotes","fetchAllNotes","callback","changes","since","live","on","idx","noteText","handleNoteButtonClick","CanvasContainer","DndProvider","backend","HTML5Backend","Canvas","setMousePos","noteListPos","setNoteListPos","cards","useSelector","useDrop","accept","drop","delta","getDifferenceFromInitialOffset","Math","round","moveCardPosition","createCard","newCard","onMouseMove","nativeEvent","offsetX","offsetY","onDoubleClick","entries","index","card","SearchBar","setQuery","results","setResults","Search","total_rows","val","addNoteToCanvas","CanvasWorkspace","PanelWorkspace","Routes","from","to","noThrow","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.129df187.chunk.js","sourcesContent":["import { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { Router, Location } from \"@reach/router\";\nimport \"./style.css\";\n\nconst FadeInTransitionRouter = (props) => {\n  return (\n    <Location>\n      {({ location }) => (\n        <TransitionGroup className=\"transition-group\">\n          <CSSTransition key={location.key} classNames=\"fade\" timeout={500}>\n            <Router location={location}>{props.children}</Router>\n          </CSSTransition>\n        </TransitionGroup>\n      )}\n    </Location>\n  );\n};\n\nexport default FadeInTransitionRouter;\n","const NestedRoute = ({ children }) => {\n  return children;\n};\n\nexport default NestedRoute;\n","import React from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { ICanvasCard } from \"model/interfaces\";\nimport \"./card.css\";\n\ndeclare interface CardProps {\n  item: ICanvasCard;\n  onRemove?;\n  hideSourceOnDrag?: boolean;\n  children?: any;\n}\n\nconst Card = (props: CardProps) => {\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: props.item,\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging(),\n    }),\n  });\n\n  return (\n    <div\n      id={props.item.id}\n      ref={preview}\n      className=\"card\"\n      style={{\n        display: isDragging && props.hideSourceOnDrag ? \"none\" : \"flex\",\n        opacity: isDragging ? 0.5 : 1,\n        top: props.item.y,\n        left: props.item.x,\n      }}\n    >\n      <div className=\"flex justify-end p-3\">\n        <div\n          ref={drag}\n          id={`${props.item.id}-drag-handle`}\n          className=\"card-drag-handle\"\n        ></div>\n      </div>\n\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const ItemTypes = {\n  CARD: \"card\",\n  COLLECTION: \"collection\",\n};\n\nexport interface ICanvasCard {\n  type: string;\n  id: string;\n  // The x,y co-ords of the element\n  x: number;\n  y: number;\n}\n\nexport interface ICanvas {\n  id: string;\n  title: string;\n  items: ICanvasCard[];\n}\n\nexport interface INote {\n  id: string;\n  title: string;\n  createdTime: number;\n  lastEditedTime: number;\n  meta: object;\n  state: PMState;\n  text: string;\n}\n\n// JSON serialised prosemirror state returned by state.toJSON()\nexport interface PMState {\n  doc: object;\n  selection: object;\n}\n\nexport interface SearchResult {\n  rows: SearchResultRow[];\n  total_rows: number;\n}\n\nexport interface SearchResultRow {\n  id: string;\n  score: number;\n  doc: INote;\n}\n","import {\n  Node as ProsemirrorNode,\n  Mark,\n  Schema,\n  DOMOutputSpecArray,\n} from \"prosemirror-model\";\n\nconst calcYchangeDomAttrs = (attrs: any, domAttrs: any = {}) => {\n  domAttrs = Object.assign({}, domAttrs);\n  if (attrs.ychange !== null) {\n    domAttrs.ychange_user = attrs.ychange.user;\n    domAttrs.ychange_state = attrs.ychange.state;\n  }\n  return domAttrs;\n};\n\n// :: Object\n// [Specs](#model.NodeSpec) for the nodes defined in this schema.\nexport const nodes = {\n  // :: NodeSpec The top level document node.\n  doc: {\n    content: \"block+\",\n  },\n\n  // :: NodeSpec A plain paragraph textblock. Represented in the DOM\n  // as a `<p>` element.\n  paragraph: {\n    attrs: { ychange: { default: null } },\n    content: \"inline*\",\n    group: \"block\",\n    parseDOM: [{ tag: \"p\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"p\", calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A blockquote (`<blockquote>`) wrapping one or more blocks.\n  blockquote: {\n    attrs: { ychange: { default: null } },\n    content: \"block+\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [{ tag: \"blockquote\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"blockquote\", calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A horizontal rule (`<hr>`).\n  horizontal_rule: {\n    attrs: { ychange: { default: null } },\n    group: \"block\",\n    parseDOM: [{ tag: \"hr\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"hr\", calcYchangeDomAttrs(node.attrs)];\n    },\n  },\n\n  // :: NodeSpec A heading textblock, with a `level` attribute that\n  // should hold the number 1 to 6. Parsed and serialized as `<h1>` to\n  // `<h6>` elements.\n  heading: {\n    attrs: {\n      level: { default: 1 },\n      ychange: { default: null },\n    },\n    content: \"inline*\",\n    group: \"block\",\n    defining: true,\n    parseDOM: [\n      { tag: \"h1\", attrs: { level: 1 } },\n      { tag: \"h2\", attrs: { level: 2 } },\n      { tag: \"h3\", attrs: { level: 3 } },\n      { tag: \"h4\", attrs: { level: 4 } },\n      { tag: \"h5\", attrs: { level: 5 } },\n      { tag: \"h6\", attrs: { level: 6 } },\n    ],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"h\" + node.attrs.level, calcYchangeDomAttrs(node.attrs), 0];\n    },\n  },\n\n  // :: NodeSpec A code listing. Disallows marks or non-text inline\n  // nodes by default. Represented as a `<pre>` element with a\n  // `<code>` element inside of it.\n  code_block: {\n    attrs: { ychange: { default: null } },\n    content: \"text*\",\n    marks: \"\",\n    group: \"block\",\n    code: true,\n    defining: true,\n    parseDOM: [{ tag: \"pre\", preserveWhitespace: \"full\" as \"full\" }],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      return [\"pre\", calcYchangeDomAttrs(node.attrs), [\"code\", 0]];\n    },\n  },\n\n  // :: NodeSpec The text node.\n  text: {\n    group: \"inline\",\n  },\n\n  // :: NodeSpec An inline image (`<img>`) node. Supports `src`,\n  // `alt`, and `href` attributes. The latter two default to the empty\n  // string.\n  image: {\n    inline: true,\n    attrs: {\n      ychange: { default: null },\n      src: {},\n      alt: { default: null },\n      title: { default: null },\n    },\n    group: \"inline\",\n    draggable: true,\n    parseDOM: [\n      {\n        tag: \"img[src]\",\n        getAttrs(dom: Element) {\n          return {\n            src: dom.getAttribute(\"src\"),\n            title: dom.getAttribute(\"title\"),\n            alt: dom.getAttribute(\"alt\"),\n          };\n        },\n      },\n    ],\n    toDOM(node: ProsemirrorNode): DOMOutputSpecArray {\n      const domAttrs = {\n        src: node.attrs.src,\n        title: node.attrs.title,\n        alt: node.attrs.alt,\n      };\n      return [\"img\", calcYchangeDomAttrs(node.attrs, domAttrs)];\n    },\n  },\n\n  // :: NodeSpec A hard line break, represented in the DOM as `<br>`.\n  hard_break: {\n    inline: true,\n    group: \"inline\",\n    selectable: false,\n    parseDOM: [{ tag: \"br\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"br\"];\n    },\n  },\n};\n\n// :: Object [Specs](#model.MarkSpec) for the marks in the schema.\nexport const marks = {\n  // :: MarkSpec A link. Has `href` and `title` attributes. `title`\n  // defaults to the empty string. Rendered and parsed as an `<a>`\n  // element.\n  link: {\n    attrs: {\n      href: {},\n      title: { default: null },\n    },\n    inclusive: false,\n    parseDOM: [\n      {\n        tag: \"a[href]\",\n        getAttrs(dom: Element) {\n          return {\n            href: dom.getAttribute(\"href\"),\n            title: dom.getAttribute(\"title\"),\n          };\n        },\n      },\n    ],\n    toDOM(node: Mark): DOMOutputSpecArray {\n      return [\"a\", node.attrs, 0];\n    },\n  },\n\n  // :: MarkSpec An emphasis mark. Rendered as an `<em>` element.\n  // Has parse rules that also match `<i>` and `font-style: italic`.\n  em: {\n    parseDOM: [{ tag: \"i\" }, { tag: \"em\" }, { style: \"font-style=italic\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"em\", 0];\n    },\n  },\n\n  // :: MarkSpec A strong mark. Rendered as `<strong>`, parse rules\n  // also match `<b>` and `font-weight: bold`.\n  strong: {\n    parseDOM: [\n      { tag: \"strong\" },\n      // This works around a Google Docs misbehavior where\n      // pasted content will be inexplicably wrapped in `<b>`\n      // tags with a font-weight normal.\n      {\n        tag: \"b\",\n        getAttrs: (node: any) => node.style.fontWeight !== \"normal\" && null,\n      },\n      {\n        style: \"font-weight\",\n        getAttrs: (value: string) =>\n          /^(bold(er)?|[5-9]\\d{2,})$/.test(value) && null,\n      },\n    ],\n    toDOM(): DOMOutputSpecArray {\n      return [\"strong\", 0];\n    },\n  },\n\n  // :: MarkSpec Code font mark. Represented as a `<code>` element.\n  code: {\n    parseDOM: [{ tag: \"code\" }],\n    toDOM(): DOMOutputSpecArray {\n      return [\"code\", 0];\n    },\n  },\n  ychange: {\n    attrs: {\n      user: { default: null },\n      state: { default: null },\n    },\n    inclusive: false,\n    parseDOM: [{ tag: \"ychange\" }],\n    toDOM(node: Mark): DOMOutputSpecArray {\n      return [\n        \"ychange\",\n        { ychange_user: node.attrs.user, ychange_state: node.attrs.state },\n        0,\n      ];\n    },\n  },\n};\n\n// :: Schema\n// This schema rougly corresponds to the document schema used by\n// [CommonMark](http://commonmark.org/), minus the list elements,\n// which are defined in the [`prosemirror-schema-list`](#schema-list)\n// module.\n//\n// To reuse elements from this schema, extend or read from its\n// `spec.nodes` and `spec.marks` [properties](#model.Schema.spec).\nexport const schema = new Schema({ nodes, marks });\n","import { exampleSetup } from \"prosemirror-example-setup\";\nimport { schema } from \"../schema\";\nimport { Plugin } from \"prosemirror-state\";\nimport * as Y from \"yjs\";\nimport { WebrtcProvider } from \"y-webrtc\";\nimport {\n  ySyncPlugin,\n  yCursorPlugin,\n  yUndoPlugin,\n  undo,\n  redo,\n} from \"y-prosemirror\";\nimport { keymap } from \"prosemirror-keymap\";\n\nexport const basicPlugins: Plugin[] = exampleSetup({\n  schema: schema,\n  menuBar: false,\n});\n\nconst ydoc = new Y.Doc();\nconst provider = new WebrtcProvider(\"prosemirror-debug\", ydoc);\nconst type = ydoc.getXmlFragment(\"prosemirror\");\n\nexport const yjsPlugins: Plugin[] = [\n  ySyncPlugin(type),\n  yCursorPlugin(provider.awareness),\n  yUndoPlugin(),\n  keymap({\n    \"Mod-z\": undo,\n    \"Mod-y\": redo,\n    \"Mod-Shift-z\": redo,\n  }),\n].concat(basicPlugins);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { EditorState, Selection } from \"prosemirror-state\";\nimport { DirectEditorProps, EditorView } from \"prosemirror-view\";\nimport { schema } from \"./schema\";\nimport { basicPlugins } from \"./plugins\";\nimport \"./editor.css\";\nimport { PMState } from \"model/interfaces\";\n\ninterface EditorProps {\n  onFocus?;\n  onBlur?;\n  onChange?;\n  state?: PMState;\n}\n\nconst Editor = (props: EditorProps) => {\n  const { onFocus, onBlur, onChange } = props;\n  const editorRef = useRef();\n  const [editorView, setEditorView] = useState<EditorView>(null);\n\n  const generateEditorViewProps = useCallback(() => {\n    return {\n      dispatchTransaction(tr) {\n        const newState = this.state.apply(tr);\n        this.updateState(newState);\n        onChange?.(this);\n      },\n      handleDOMEvents: {\n        focus: (view: EditorView, event: FocusEvent) => {\n          const transaction = view.state.tr.setMeta(\"focused\", true);\n          view.dispatch(transaction);\n          onFocus?.(editorView);\n          return false;\n        },\n        blur: (view: EditorView, event: FocusEvent) => {\n          const transaction = view.state.tr.setMeta(\"focused\", false);\n          view.dispatch(transaction);\n          onBlur?.(editorView);\n          return false;\n        },\n      },\n    };\n  }, [onChange, onBlur, onFocus, editorView]);\n\n  const generateEditorState = useCallback((): EditorState => {\n    let options: any = {\n      schema: schema,\n      plugins: basicPlugins,\n    };\n\n    if (props.state?.doc) {\n      options.doc = schema.nodeFromJSON(props.state.doc);\n\n      if (props.state?.selection) {\n        options.selection = Selection.fromJSON(\n          options.doc,\n          props.state.selection\n        );\n      }\n    }\n\n    return EditorState.create(options);\n  }, [props.state]);\n\n  // Initialise the editor view\n  useEffect(() => {\n    const editorProps: DirectEditorProps = {\n      state: generateEditorState(),\n      ...generateEditorViewProps(),\n    };\n\n    const editorView = new EditorView(editorRef.current, editorProps);\n    setEditorView(editorView);\n\n    return () => {\n      editorView.destroy();\n    };\n  }, []);\n\n  // Update the editor props to sync editor event callbacks\n  useEffect(() => {\n    editorView?.setProps(generateEditorViewProps());\n  }, [generateEditorViewProps, editorView]);\n\n  // Update editor state to sync with state prop\n  useEffect(() => {\n    editorView?.updateState(generateEditorState());\n  }, [generateEditorState, editorView]);\n\n  return (\n    <div id=\"editorContainer\">\n      <div id=\"editor\" ref={editorRef}></div>\n    </div>\n  );\n};\n\nexport default Editor;\n","import PouchDB from \"pouchdb\";\nimport Upsert from \"pouchdb-upsert\";\nimport { INote, PMState, SearchResult } from \"model/interfaces\";\nimport QuickSearch from \"pouchdb-quick-search\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { schema } from \"components/editor/schema\";\n\nPouchDB.plugin(Upsert);\nPouchDB.plugin(QuickSearch);\n\nlet db = new PouchDB(\"notes\");\n\n(db as any)\n  .search({ fields: [\"title\", \"text\"], build: true })\n  .then(() => console.log(\"Index created succesfully\"))\n  .catch((err) => console.log(\"ERROR failed to build index\"));\n\nexport async function updateNote(inputDocument: INote) {\n  try {\n    let text = schema.nodeFromJSON(inputDocument.state.doc).textContent;\n    inputDocument.text = text;\n    const docId = inputDocument.id || inputDocument[\"_id\"];\n    const response = await db.upsert(docId, (doc) => {\n      return inputDocument as Partial<PouchDB.Core.IdMeta>;\n    });\n    return response;\n  } catch (error) {\n    console.log(`ERROR: couldn't update \\n${error}`);\n  }\n}\n\n// Create a new note\nexport async function insertNote(\n  id?: string,\n  title?: string,\n  meta?: object,\n  state?: PMState,\n  createdTime?: string,\n  lastEditedTime?: string\n) {\n  try {\n    let newDocument = {\n      _id: id || uuidv4(),\n      title: title || null,\n      meta: meta || {},\n      state: state || {},\n      createdTime: createdTime || Date.now(),\n      lastEditedTime: lastEditedTime || Date.now(),\n    };\n\n    const storedDocument = await db.putIfNotExists(newDocument);\n    return storedDocument;\n  } catch (error) {\n    console.log(`ERROR: couldn't create doc ${error}`);\n  }\n}\n\nexport async function getNotes(): Promise<\n  PouchDB.Core.ExistingDocument<PouchDB.Core.AllDocsMeta>[]\n> {\n  try {\n    let result = await db.allDocs({ include_docs: true });\n    return result?.rows?.map((row) => row.doc);\n  } catch (error) {\n    console.log(`ERROR fetching all notes \\n${error}`);\n  }\n}\n\nexport async function getNoteById(id: string) {\n  try {\n    const doc = await db.get(id);\n    return doc;\n  } catch (error) {\n    console.log(`ERROR fetching  ${id} \\n${error}`);\n  }\n}\n\nexport function onChange(callback) {\n  db.changes({\n    since: \"now\",\n    live: true,\n  }).on(\"change\", () => callback());\n}\n\nexport async function search(\n  query: string,\n  fields = [\"title\", \"text\"]\n): Promise<SearchResult> {\n  return (db as any)\n    ?.search({ query: query, fields: fields, include_docs: true })\n    .then((res) => {\n      return res;\n    })\n    .catch((err) => console.log(`Search failed ${err}`));\n}\n","import { createStore, compose } from \"redux\";\nimport { ICanvas } from \"model/interfaces\";\nimport update from \"immutability-helper\";\n\nexport const ADD_ITEM_TO_CANVAS = \"ADD_ITEM_TO_CANVAS\";\nexport const REMOVE_ITEM_FROM_CANVAS = \"REMOVE_ITEM_FROM_CANVAS\";\nexport const UPDATE_ITEM = \"UPDATE_ITEM_POSITION\";\n\nconst openCanvas: ICanvas = {\n  id: \"randomID\",\n  title: \"Main Canvas\",\n  items: [],\n};\n\nconst reducer = function (\n  state = { openCanvas: openCanvas },\n  { type, payload }\n) {\n  switch (type) {\n    case ADD_ITEM_TO_CANVAS:\n      const { items } = state.openCanvas;\n      if (!items.find((item) => item.id === payload?.id)) {\n        state.openCanvas.items = update(items, { $push: [payload] });\n        return state;\n      }\n      return state;\n    case REMOVE_ITEM_FROM_CANVAS:\n      state.openCanvas.items = state.openCanvas.items.filter(\n        (item) => item.id !== payload?.id\n      );\n      return state;\n    case UPDATE_ITEM:\n      const oldItem = state.openCanvas.items.find(\n        (item) => item.id === payload?.id\n      );\n\n      if (!oldItem) {\n        return state;\n      }\n\n      const itemIdx = state.openCanvas.items.indexOf(oldItem);\n      state.openCanvas.items = update(state.openCanvas.items, {\n        [itemIdx]: { $merge: { ...payload } },\n      });\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nconst composeEnhancers =\n  (window as any).__REDUX_DEVTOOLS_EXTENSION__ || compose;\nlet store = createStore(reducer, composeEnhancers());\n\nexport default store;\n","/* Manage the editor's interaction with the db & global state */\nimport React, { useCallback, useEffect, useReducer } from \"react\";\nimport Editor from \"./editor\";\nimport { insertNote, updateNote, getNoteById } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\nimport { EditorView } from \"prosemirror-view\";\nimport { useDispatch } from \"react-redux\";\nimport { REMOVE_ITEM_FROM_CANVAS } from \"store\";\nimport { useState } from \"react\";\n\ninterface EditorContainerProps {\n  id?: string;\n  note?: INote;\n}\n\nconst SET_NOTE = \"SET_NOTE\";\nconst SET_NOTE_STATE = \"SET_NOTE_STATE\";\nconst NEW_NOTE = \"NEW_NOTE\";\n\nconst reducer = (note: INote, { type, payload }) => {\n  switch (type) {\n    case SET_NOTE:\n      return payload;\n    case NEW_NOTE:\n      let currentTime = Date.now();\n      const newNote = {\n        ...payload,\n        createdTime: currentTime,\n        lastEditedTime: currentTime,\n      };\n      return newNote;\n    case SET_NOTE_STATE:\n      const updatedNote = {\n        ...note,\n        state: payload,\n        lastEditedTime: Date.now(),\n      };\n      return updatedNote;\n  }\n};\nconst Container = (props: EditorContainerProps) => {\n  const { note } = props;\n  const [localNote, dispatch] = useReducer(reducer, note);\n  const reduxDispatch = useDispatch();\n  const [focused, setFocused] = useState(false);\n\n  const initialiseNote = useCallback(async () => {\n    if (props.id) {\n      // try fetch the note from the db\n      let doc = await getNoteById(props.id);\n      if (doc) {\n        dispatch({ type: SET_NOTE, payload: doc });\n      } else {\n        // No note found create one with the passed in id\n        const doc = await insertNote(props.id);\n        dispatch({ type: NEW_NOTE, payload: doc });\n      }\n    } else {\n      // No id create note with db generated id\n      const doc = await insertNote();\n      dispatch({ type: NEW_NOTE, payload: doc });\n    }\n  }, [props.id]);\n\n  // On init\n  useEffect(() => {\n    void initialiseNote();\n  }, [initialiseNote]);\n\n  const handleOnChange = useCallback((editorView: EditorView) => {\n    dispatch({\n      type: SET_NOTE_STATE,\n      payload: editorView?.state?.toJSON(),\n    });\n  }, []);\n\n  const handleBlur = useCallback(\n    (editorView: EditorView) => {\n      void updateNote(localNote);\n      setFocused(false);\n    },\n    [localNote]\n  );\n\n  return (\n    <div>\n      <div className=\"flex\">\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={localNote?.title}\n          className=\"font-medium\"\n          onChange={(e) => {\n            localNote.title = e.target.value;\n            updateNote(localNote);\n          }}\n        />\n        <button\n          className=\"h-4 w-4 rounded-full bg-red-300 hover:bg-red-500\"\n          onClick={(_) =>\n            reduxDispatch({\n              type: REMOVE_ITEM_FROM_CANVAS,\n              payload: localNote,\n            })\n          }\n        />\n      </div>\n      <Editor\n        state={localNote?.state}\n        onChange={handleOnChange}\n        onBlur={handleBlur}\n        onFocus={(_) => setFocused(true)}\n      />\n    </div>\n  );\n};\n\nexport default Container;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { getNotes, onChange } from \"db/pouch/notes\";\nimport { INote } from \"model/interfaces\";\n\ninterface NoteListProps {\n  handleNoteButtonClick(note: INote): any;\n}\n\nconst NoteList = (props: NoteListProps) => {\n  const [allNotes, setAllNotes] = useState([]);\n\n  const fetchAllNotes = useCallback(async () => {\n    const response = await getNotes();\n    setAllNotes(response);\n  }, [setAllNotes]);\n\n  useEffect(() => {\n    fetchAllNotes();\n    onChange(fetchAllNotes);\n  }, [fetchAllNotes]);\n\n  return (\n    <div className=\"flex w-64 flex-col rounded shadow-md items-center divide-y divide-gray-200 divide-opacity-50\">\n      {allNotes.map((note, idx) => {\n        const noteText = note?.state?.doc ? note.text : \"\";\n\n        return (\n          <button\n            className=\"truncate w-full transition duration-250 ease-in-out bg-gradient-to-r hover:from-gray-100 hover:to-gray-200\"\n            key={idx}\n            onClick={() => {\n              props.handleNoteButtonClick(note);\n            }}\n          >\n            {note.title || noteText}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React, { useCallback, useState } from \"react\";\nimport { DndProvider, useDrop, XYCoord } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport Card from \"components/card/card\";\nimport { ItemTypes, ICanvasCard, INote, ICanvas } from \"model/interfaces\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport EditorContainer from \"components/editor/container\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS, UPDATE_ITEM } from \"store\";\nimport \"./canvas.css\";\nimport NoteList from \"components/note-list/note-list\";\n\nfunction CanvasContainer() {\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Canvas />\n    </DndProvider>\n  );\n}\n\nexport default CanvasContainer;\n\nconst Canvas = (props) => {\n  const debug = false;\n  const [mousePos, setMousePos] = useState<XYCoord>({ x: 0, y: 0 });\n  const [noteListPos, setNoteListPos] = useState<XYCoord>({ x: 0, y: 0 });\n\n  const cards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n  const dispatch = useDispatch();\n\n  const [, drop] = useDrop({\n    accept: [ItemTypes.CARD, ItemTypes.COLLECTION],\n    drop: (item: ICanvasCard, monitor) => {\n      const delta = monitor.getDifferenceFromInitialOffset() as XYCoord;\n      const x = Math.round(item.x + delta.x);\n      const y = Math.round(item.y + delta.y);\n      item.type === ItemTypes.CARD\n        ? moveCardPosition(item.id, x, y)\n        : setNoteListPos({ x, y });\n\n      return { x, y };\n    },\n  });\n\n  const createCard = useCallback(\n    (x: number, y: number) => {\n      const newCard: ICanvasCard = {\n        type: ItemTypes.CARD,\n        id: uuidv4(),\n        x: x,\n        y: y,\n      };\n      dispatch({ type: ADD_ITEM_TO_CANVAS, payload: newCard });\n    },\n    [dispatch]\n  );\n\n  const moveCardPosition = useCallback(\n    (id: string, x: number, y: number) => {\n      dispatch({ type: UPDATE_ITEM, payload: { id: id, x: x, y: y } });\n    },\n    [dispatch]\n  );\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div\n      className=\"canvas\"\n      ref={drop}\n      onMouseMove={(e) => {\n        setMousePos({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\n      }}\n      onDoubleClick={(e) => {\n        createCard(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      }}\n    >\n      {debug && (\n        <span style={{ color: \"white\" }}>\n          x: {mousePos.x},y: {mousePos.y}\n        </span>\n      )}\n\n      <Card\n        item={{\n          type: ItemTypes.COLLECTION,\n          id: uuidv4(),\n          x: noteListPos.x,\n          y: noteListPos.y,\n        }}\n      >\n        <NoteList handleNoteButtonClick={addNoteToCanvas} />\n      </Card>\n\n      {Object.entries(cards).map(([key, card], index) => (\n        <Card key={index} item={card} hideSourceOnDrag>\n          <EditorContainer id={card.id} />\n        </Card>\n      ))}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useState } from \"react\";\nimport { VscSearch } from \"react-icons/vsc\";\nimport { search } from \"db/pouch/notes\";\nimport \"./searchbar.css\";\nimport { ICanvasCard, INote, ItemTypes, SearchResult } from \"model/interfaces\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\n\nexport default function SearchBar() {\n  const [focused, setFocused] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState<SearchResult>();\n\n  const Search = (query: string) => {\n    search(query).then((res) => setResults(res));\n  };\n\n  const dispatch = useDispatch();\n\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div className=\"relative\">\n      <div className=\"h-14 w-80 border border-black rounded-full flex justify-between pl-6 items-center relative\">\n        <input\n          placeholder=\"Search\"\n          className=\"w-3/4 h-full bg-transparent overflow-ellipsis\"\n          type=\"text\"\n          value={query}\n          onChange={(e) => {\n            const { value } = e.target;\n            setQuery(value);\n            Search(value);\n          }}\n          onFocus={(e) => setFocused(true)}\n          onBlur={(e) => setFocused(false)}\n        />\n        <button className=\"h-14 w-14 rounded-full bg-black text-white flex justify-center items-center\">\n          <VscSearch />\n        </button>\n      </div>\n\n      {query !== \"\" && results?.total_rows > 0 && (\n        <div className=\"search-results border border-black border-t-0 rounded-b-lg overflow-hidden\">\n          {results?.rows?.map((val, idx) => {\n            return (\n              <button\n                key={idx}\n                className=\"result\"\n                onClick={(_) => {\n                  addNoteToCanvas(val.doc);\n                  setQuery(\"\");\n                }}\n              >\n                {val.doc.title ?? val.doc.title}\n              </button>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport Canvas from \"components/canvas/canvas\";\nimport SearchBar from \"components/searchbar/searchbar\";\n\nexport default function CanvasWorkspace() {\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <Canvas />\n    </div>\n  );\n}\n","import React from \"react\";\nimport SearchBar from \"components/searchbar/searchbar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ICanvas, ICanvasCard, INote, ItemTypes } from \"model/interfaces\";\nimport NoteList from \"components/note-list/note-list\";\nimport { ADD_ITEM_TO_CANVAS } from \"store\";\nimport EditorContainer from \"components/editor/container\";\n\nexport default function PanelWorkspace() {\n  const cards: ICanvasCard[] = useSelector(\n    (state: { openCanvas: ICanvas }) => state.openCanvas.items\n  );\n  const dispatch = useDispatch();\n  const addNoteToCanvas = (note: INote) => {\n    const item: ICanvasCard = {\n      id: note?.id,\n      type: ItemTypes.CARD,\n      x: 690,\n      y: 320,\n    };\n    dispatch({ type: ADD_ITEM_TO_CANVAS, payload: item });\n  };\n\n  return (\n    <div className=\"min-h-screen\">\n      <div id=\"top-bar\" className=\"flex flex-row-reverse p-8\">\n        <SearchBar />\n      </div>\n      <div className=\"flex h-full w-full space-x-4\">\n        <NoteList handleNoteButtonClick={addNoteToCanvas} />\n        {cards.map((card, idx) => (\n          <EditorContainer key={idx} id={card.id} />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Redirect } from \"@reach/router\";\nimport FadeInTransitionRouter from \"./FadeInTransitionRouter\";\nimport NestedRoute from \"./NestedRoute\";\nimport CanvasWorkspace from \"pages/canvas-workspace\";\nimport PanelWorkspace from \"pages/panel-workspace\";\n\nexport default function Routes(props) {\n  return (\n    <FadeInTransitionRouter>\n      <Redirect from=\"/\" to=\"experiment-501.V2\" noThrow />\n      <NestedRoute path=\"experiment-501.V2\">\n        <CanvasWorkspace path=\"/c\" />\n        <PanelWorkspace path=\"/\" />\n      </NestedRoute>\n    </FadeInTransitionRouter>\n  );\n}\n","import React from \"react\";\nimport Routes from \"router/Routes\";\nimport { Provider } from \"react-redux\";\nimport store from \"store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <Routes />\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}